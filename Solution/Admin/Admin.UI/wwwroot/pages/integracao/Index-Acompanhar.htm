<template>
    <div>
        <!-- O botão de "Filtrar" ainda está presente, mas o diálogo já abrirá automaticamente -->
        <el-button type="primary" @click="abrirModalFiltro">Filtro</el-button>

        <!-- Tabela principal de Integrações -->
        <el-table :data="acompanhar" style="width: 100%">
            <!-- Coluna expansível de Integrações -->
            <el-table-column type="expand">
                <template #default="props">
                    <el-card :style="{ borderColor: '#f5eeeb', borderWidth: '1px', borderStyle: 'solid'}" shadow="never">
                        <!-- Tabela de Bairros dentro da Integração -->
                        <el-table class="no-bottom-border" :data="props.row.bairros" style="width: 100%">
                            <!-- Coluna expansível de Bairros -->
                            <el-table-column type="expand">
                                <template #default="bairroScope">
                                    <!-- Tabela de Imóveis dentro de cada Bairro -->
                                    <el-card :style="{ borderColor: '#b1b1b1', borderWidth: '1px', borderStyle: 'solid', maxHeight: '400px', overflow: 'hidden' }" shadow="never">
                                        <transition name="fade" mode="out-in">
                                            <el-table :data="bairroScope.row.bairro.imoveis" height="350" style="width: 100%">
                                                <el-table-column label="ID Importação" prop="id" />
                                                <el-table-column label="Código Imóvel JaCaptei" prop="cod" />
                                                <el-table-column label="Código Imoview" prop="imoviewResponse.codigo" />
                                                <el-table-column label="Data" prop="data" />
                                                <el-table-column label="Status" prop="status" />
                                                <el-table-column label="Atualizado Em" prop="atualizadoEm" />
                                                <el-table-column label="Resposta">
                                                    <template #default="scope">
                                                        <div v-if="!scope.row.imoviewResponse.erro">
                                                            {{ scope.row.imoviewResponse.mensagem }}
                                                        </div>
                                                        <div v-else>
                                                            <span class="error">Erro: {{ scope.row.imoviewResponse.mensagem }}</span>
                                                        </div>
                                                    </template>
                                                </el-table-column>
                                            </el-table>
                                        </transition>
                                    </el-card>
                                </template>
                            </el-table-column>

                            <!-- Colunas de Bairros -->
                            <el-table-column label="Bairro" prop="bairro.nome" />
                        </el-table>
                    </el-card>
                </template>
            </el-table-column>

            <!-- Colunas principais da Integração -->
            <el-table-column label="Cliente" prop="cliente" />
            <el-table-column label="Plano" prop="plano" />
            <el-table-column label="Data de Criação" prop="criadoEm" />
            <el-table-column label="Última Atualização" prop="atualizadoEm" />

        </el-table>
    </div>

    <el-dialog v-model="filtrosVisiveis"
               title="Filtro"
               width="500"
               align-center>
        <div style="display: flex; flex-direction: column;">
            <span>Integração</span>
            <el-select v-model="listaIntegracao"
                       placeholder="Escolha o Parceiro"
                       style="width: 240px">
                <el-option v-for="item in options"
                           :key="item.value"
                           :label="item.label"
                           :value="item" />
            </el-select>
        </div>

        <template #footer>
            <div class="dialog-footer">
                <el-button @click="filtrosVisiveis = false">Cancelar</el-button>
                <el-button type="primary" @click="Buscar">Aplicar Filtros</el-button>
            </div>
        </template>
    </el-dialog>
</template>

<script>
    import { ref, onMounted, getCurrentInstance } from 'vue';
    export default {
        setup() {
            const filtrosVisiveis = ref(false);
            const idIntegracao = ref(null);
            const collapseItems = ref([]);
            const listaIntegracao = ref([]);
            const instance = getCurrentInstance();
            const options = ref({});
            const acompanhar = ref([]);

            onMounted(async () => {
                setTimeout(() => {
                    filtrosVisiveis.value = true;
                }, 300);
                await getListaIntegracoes();
            });

            const abrirModalFiltro = () => {
                filtrosVisiveis.value = true;
            }

            const filtros = ref({
                Integracao: 0,
                Cliente: '',
            });

            const Buscar = async () => {
                try {
                    filtros.value.Integracao = listaIntegracao.value.value;
                    filtros.value.Cliente = listaIntegracao.value.label;
                    const url = instance.proxy.$api.BuildURL("api/imoview/integracao/status");
                    const response = await axios.post(url, filtros.value);
                    acompanhar.value = [response.data];

                } catch (error) {
                    console.error("Erro ao buscar integração:", error);
                } finally {
                    filtrosVisiveis.value = false;
                }
            };

            const getListaIntegracoes = async () => {
                try {
                    const url = instance.proxy.$api.BuildURL("api/imoview/integracao/listar");
                    const response = await axios.get(url);
                    options.value = response.data.map(item => ({
                        value: item.integracao,
                        label: item.cliente
                    }));
                    console.log(options);
                } catch (error) {
                    console.error('Erro ao buscar integrações:', error);
                }
            };

            const Alterar = (scope) => {
                console.log('Alterando', scope.row.id);
            };

            const Excluir = (scope) => {
                console.log('Excluindo', scope.row.id);
            };

            const ToggleAtivar = (scope) => {
                scope.row.ativo = !scope.row.ativo;
                console.log('Ativando/Desativando', scope.row.id);
            };

            return {
                acompanhar,
                filtrosVisiveis,
                filtros,
                Buscar,
                idIntegracao,
                listaIntegracao,
                options,
                abrirModalFiltro
            };
        },
    };
</script>

<style>
    .el-card__body {
        padding: 10px;
    }

    .error {
        color: red;
    }

    .no-bottom-border .el-table__body-wrapper {
        border-bottom: none !important;
    }
</style>