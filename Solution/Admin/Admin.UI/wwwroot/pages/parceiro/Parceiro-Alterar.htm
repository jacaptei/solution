<template>
	<div>
		<div>
			<el-row justify="center" v-if="onloading">
				<el-col :md="24" style="color:var(--s-color-primary)">
					<c-loading padding="20px"></c-loading>
				</el-col>
			</el-row>
			<div v-else-if="!onloading && ($validator.not(parceiro) || parceiro?.id==0)">
				Registro não encontrado.
			</div>
			<div v-else>
				<div>
                    <el-col :md="24">

                        <el-row :gutter="20">

                            <el-col :xs="24" :sm="12" :md="8" :lg="6" class="s-input">
                                <div>TIPO PESSOA<span></span></div>
                                <q-btn-toggle v-model="parceiro.tipoPessoa"
                                              toggle-color="primary"
                                              style="margin-top:4px"
                                              :options="[
												{label: 'Pessoa Física',   value: 'PF'},
												{label: 'Pessoa Juridica', value: 'PJ'}
											  ]">

                                </q-btn-toggle>
                            </el-col>

                            <el-col :xs="24" :sm="12" :md="8" :lg="6" class="s-input">
                                <div v-if="parceiro.ativo" style="color:var(--s-color-green)">ATIVO<span></span></div>
                                <div v-else style="color:var(--s-color-red)">INATIVO<span></span></div>
                                <el-switch v-model="parceiro.ativo" style="--el-switch-on-color:var(--s-color-green); --el-switch-off-color: var(--s-color-red)"></el-switch>
                            </el-col>

                            <el-col :xs="24" :sm="12" :md="8" :lg="6" class="s-input" style="cursor:pointer" @click="$tools.Copy(parceiro.tokenConta)">
                                <div>TITULAR DA CONTA ID# {{parceiro.idConta}}  &nbsp;&nbsp;&nbsp;<span :title="parceiro.tokenConta"> <i class="fa fa-copy"></i> token </span></div>
                                <div style="margin-top:5px;font-weight:700;color:var(--s-color-green)" v-if="parceiro.donoConta"><i class="fa fa-crown"></i> SIM</div>
                                <div style="margin-top:5px;font-weight:700;color:var(--s-color-red)" v-else>NÃO</div>
                            </el-col>



                            <!--<el-col :xs="24" :sm="12" :md="8" :lg="6" class="s-input" v-if="parceiro.donoConta">
            <div>
                PLANO<span></span>
            </div>
            <el-select filterable v-model="parceiro.idPlano" class="m-4" placeholder="Selecionar" size="large" style="width:100%">
                <el-option v-for="item in [
                                                {label: 'CORRETOR AUTÔNOMO ESSENCIAL',  value: 2 },
                                                {label: 'IMOBILIÁRIA ATÉ 03 USUÁRIOS',  value: 3 },
                                                {label: 'IMOBILIÁRIA ATÉ 05 USUÁRIOS',  value: 4 }
                                            ]"
                           :key="item.value"
                           :label="item.label"
                           :value="item.value"></el-option>
            </el-select>
        </el-col>-->
                        </el-row>
                        <el-row :gutter="20">



                            <el-col :xs="24" :sm="12" :md="8" :lg="6" class="s-input">
                                <div v-if="parceiro.tipoPessoa=='PF'">NOME<span></span></div>
                                <div v-else>NOME FANTASIA<span></span></div>
                                <el-input @keyup.enter="Enviar()" v-model="parceiro.nome" placeholder="" maxlength="120" ref="nome" input-style="text-transform:uppercase;"></el-input>
                            </el-col>

                            <el-col :xs="24" :sm="12" :md="8" :lg="6" class="s-input">
                                <div>E-MAIL <span></span></div>
                                <el-input @keyup.enter="Enviar()" v-model="parceiro.email" placeholder="" maxlength="80" input-style="text-transform:lowercase;"></el-input>
                            </el-col>
                            <el-col :xs="24" :sm="12" :md="8" :lg="6" class="s-input">
                                <div>TELEFONE 1<span></span></div>
                                <el-input @keyup.enter="Enviar()" v-model="parceiro.telefone" placeholder="(11) 11111-1111" maxlength="40" input-style="text-transform:lowercase;" v-maska data-maska="(##) #####-#### ********************"></el-input>
                            </el-col>
                            <el-col :xs="24" :sm="12" :md="8" :lg="6" class="s-input">
                                <div>TELEFONE 2<span></span></div>
                                <el-input @keyup.enter="Enviar()" v-model="parceiro.telefone2" placeholder="(11) 11111-1111" maxlength="40" input-style="text-transform:lowercase;" v-maska data-maska="(##) #####-#### ********************"></el-input>
                            </el-col>
                            <el-col :xs="24" :sm="12" :md="8" :lg="6" class="s-input" v-if="parceiro.tipoPessoa == 'PF'">
                                <div>CPF<span></span></div>
                                <el-input @keyup.enter="Enviar()" v-model="parceiro.cpf" maxlength="22" v-maska data-maska="###.###.###-##" @blur="CheckDoc"></el-input>
                            </el-col>
                            <el-col :xs="24" :sm="12" :md="8" :lg="6" class="s-input-optional" v-if="parceiro.tipoPessoa == 'PF'">
                                <div>RG<span></span></div>
                                <el-input @keyup.enter="Enviar()" v-model="parceiro.rg" maxlength="22"></el-input>
                            </el-col>
                            <el-col :xs="24" :sm="12" :md="8" :lg="6" class="s-input" v-if="parceiro.tipoPessoa == 'PF'">
                                <div>SEXO <span></span></div>
                                <el-select filterable v-model="parceiro.sexo" class="m-4" placeholder="Selecionar" size="large" style="width:100%">
                                    <el-option v-for="item in opcoes.sexos"
                                               :key="item.id"
                                               :label="item.label"
                                               :value="item.value">
                                    </el-option>
                                </el-select>
                            </el-col>

                            <el-col :xs="24" :sm="12" :md="8" :lg="6" class="s-input" v-if="parceiro.tipoPessoa == 'PF'">
                                <div>DATA DE NASCIMENTO <span></span></div>
                                <div>
                                    <div style="display:inline-block;width:90px ;padding-right:10px"><el-select @change="()=>{ if(!ChecarDataNascimento()){ $tools.Alert('<b>DATA DE NASCIMENTO</b> inválida'); } }" v-model="DiaNascimento" filterable placeholder="DIA" size="medium"><el-option v-for="item in $sdata.opcoes.days" :key="item.value" :label="item.label" :value="item.value" style="height:40px"></el-option></el-select></div>
                                    <div style="display:inline-block;width:140px;padding-right:10px"><el-select @change="()=>{ if(!ChecarDataNascimento()){ $tools.Alert('<b>DATA DE NASCIMENTO</b> inválida'); } }" v-model="MesNascimento" filterable placeholder="MÊS" size="medium"><el-option v-for="item in $sdata.opcoes.months" :key="item.value" :label="item.label" :value="item.value" style="height:40px"></el-option></el-select></div>
                                    <div style="display:inline-block;width:80px;"><el-select @change="()=>{ if(!ChecarDataNascimento()){ $tools.Alert('<b>DATA DE NASCIMENTO</b> inválida'); } }" v-model="AnoNascimento" filterable placeholder="ANO" size="medium"><el-option v-for="item in $sdata.opcoes.years" :key="item.value" :label="item.label" :value="item.value" style="height:40px"></el-option></el-select></div>
                                </div>
                            </el-col>


                            <el-col :xs="24" :sm="12" :md="8" :lg="6" class="s-input" v-if="parceiro.tipoPessoa == 'PJ'">
                                <div>CNPJ<span></span></div>
                                <el-input @keyup.enter="Enviar()" v-model="parceiro.cnpj" maxlength="22" v-maska data-maska="##.###.###/####-##" @blur="CheckDoc" ref="documento"></el-input>
                            </el-col>
                            <el-col :xs="24" :sm="12" :md="8" :lg="6" class="s-input" v-if="parceiro.tipoPessoa == 'PJ'">
                                <div>RAZÃO SOCIAL <span></span></div>
                                <el-input @keyup.enter="Enviar()" v-model="parceiro.razao" placeholder="" maxlength="80" input-style="text-transform:uppercase;"></el-input>
                            </el-col>
                            <el-col :xs="24" :sm="12" :md="8" :lg="6" class="s-input" v-if="parceiro.tipoPessoa == 'PJ'">
                                <div>NOME DO RESPONSÁVEL <span></span></div>
                                <el-input @keyup.enter="Enviar()" v-model="parceiro.responsavel" placeholder="" maxlength="80" input-style="text-transform:uppercase;"></el-input>
                            </el-col>


                            <el-col :xs="24" :sm="12" :md="8" :lg="6" class="s-input">
                                <div>CRECI<span></span></div>
                                <el-input @keyup.enter="Enviar()" v-model="parceiro.creci" placeholder="" maxlength="40" input-style="text-transform:lowercase;"></el-input>
                            </el-col>
                            <el-col :xs="24" :sm="12" :md="8" :lg="6" class="s-input">
                                <div><p>CRECI ESTADO</p><span></span></div>
                                <el-select filterable v-model="parceiro.creciEstado" class="m-4" placeholder="Selecionar" size="large" style="width:100%">
                                    <el-option v-for="item in opcoes.estados"
                                               :key="item.id"
                                               :label="item.label"
                                               :value="item.value">
                                    </el-option>
                                </el-select>
                            </el-col>


                            <el-col :xs="24" :sm="12" :md="8" :lg="6" class="s-input-optional">
                                <div><p>CEP</p><span></span></div>
                                <el-input v-model="cep.numero" placeholder="" ref="postalCode" v-maska data-maska="#####-###" @keyup="()=>{  if(cep.numero.length>=9){BuscarEndereco();} }">
                                    <template #append>
                                        <c-loading size="20px" v-if="carregandoCEP"></c-loading>
                                        <i class="fa fa-search" v-else-if="(cep.numero.length < 9)" style="color:var(--s-color-accent)" @click="$tools.Alert('Preencha todo o CEP para poder realizar a busca.')"></i>
                                        <i class="fa fa-search" v-else style="color:var(--s-color-accent);cursor:pointer" @click="BuscarEndereco"></i>
                                    </template>
                                </el-input>
                            </el-col>

                            <el-col :xs="24" :sm="12" :md="8" :lg="6" class="s-input">
                                <div><p>ESTADO</p><span></span></div>
                                <div style="height:40px;width:40px;" v-if="carregandoEstados">
                                    <c-loading></c-loading>
                                </div>
                                <el-select v-else filterable v-model="parceiro.estado" class="m-4" placeholder="Selecionar" size="large" style="width:100%" @change="(item)=>{ObterCidades(item);enableFilterButton = true;}">
                                    <el-option v-for="item in opcoes.estados"
                                               :key="item.id"
                                               :label="item.label"
                                               :value="item.value">
                                    </el-option>
                                </el-select>
                            </el-col>
                            <el-col :xs="24" :sm="12" :md="8" :lg="6" class="s-input">
                                <div><p>CIDADE</p><span></span></div>
                                <div style="height:40px;width:40px" v-if="carregandoCidades">
                                    <c-loading></c-loading>
                                </div>
                                <el-select v-else v-model="parceiro.cidade" filterable class="m-4" placeholder="Selecionar" size="large" style="width:100%" @click="()=>{ if($validator.not(parceiro.estado)){ $tools.Alert('Selecione um <b>Estado</b> antes');} }" @change="(item)=>{ObterBairros(item);enableFilterButton = true;}">
                                    <el-option v-for="item in opcoes.cidades"
                                               :key="item.id"
                                               :label="item.label"
                                               :value="item.value">
                                    </el-option>
                                </el-select>
                            </el-col>
                            <el-col :xs="24" :sm="12" :md="8" :lg="6" class="s-input">
                                <div><p>BAIRRO</p><span></span></div>
                                <div style="height:40px;width:40px" v-if="carregandoBairros">
                                    <c-loading></c-loading>
                                </div>
                                <el-select v-else v-model="parceiro.bairro" filterable :clearable="true" class="m-4" placeholder="Selecionar" size="large" style="width:100%;" @click="()=>{ if($validator.not(parceiro.estado)){ $tools.Alert('Selecione <b>Estado</b> e <b>Cidade</b> antes');} }" @change="(item)=>{DefinirBairro(item);enableFilterButton = true;}">
                                    <el-option v-for="item in opcoes.bairros"
                                               :key="item.id"
                                               :label="item.label"
                                               :value="item.value">
                                    </el-option>
                                </el-select>
                            </el-col>


                            <el-col :xs="24" :sm="12" :md="8" :lg="6" class="s-input">
                                <div>LOGRADOURO <span>&nbsp;rua, avenida, praça, etc</span></div>
                                <el-input @keyup.enter="Enviar()" v-model="parceiro.logradouro" placeholder="" maxlength="80" input-style="text-transform:uppercase;"></el-input>
                            </el-col>
                            <el-col :xs="24" :sm="12" :md="8" :lg="6" class="s-input">
                                <div>NÚMERO <span>&nbsp;&nbsp;informe <b>SN</b> se não houver</span></div>
                                <el-input @keyup.enter="Enviar()" v-model="parceiro.numero" placeholder="" maxlength="80" input-style="text-transform:uppercase;" ref="addressnumber"></el-input>
                            </el-col>

                            <el-col :xs="24" :sm="12" :md="8" :lg="6" class="s-input-optional">
                                <div>COMPLEMENTO <span></span></div>
                                <el-input @keyup.enter="Enviar()" v-model="parceiro.complemento" placeholder="" maxlength="80" input-style="text-transform:uppercase;"></el-input>
                            </el-col>

                            <el-col :xs="24" :sm="12" :md="8" :lg="6" class="s-input-optional">
                                <div>CRM username<span></span></div>
                                <el-input @keyup.enter="Enviar()" v-model="parceiro.usernameCRM" placeholder="CRM username" maxlength="40"></el-input>
                            </el-col>
                            <el-col :xs="24" :sm="12" :md="8" :lg="6" class="s-input-optional">
                                <div>CRM senha<span></span></div>
                                <el-input @keyup.enter="Enviar()" v-model="parceiro.senhaCRM" type="password" placeholder="CRM senha" maxlength="20" show-password></el-input>
                            </el-col>

                            <el-col :xs="24" :sm="12" :md="8" :lg="6" class="s-input-optional">
                                <div>NOVA SENHA <span> não preencher para manter atual</span></div>
                                <el-input @keyup.enter="Enviar()" v-model="novaSenha" type="password" placeholder="" maxlength="20" show-password></el-input>
                            </el-col>


                            <el-col :xs="24" :sm="24" :md="24" :lg="24" class="s-input-optional" style="width:100%;max-width:unset">
                                <div>OBSERVAÇÕES <span></span></div>
                                <el-input @keyup.enter="Enviar()" v-model="parceiro.obs" placeholder="" maxlength="200" input-style="text-transform:lowercase;"></el-input>
                            </el-col>

                        </el-row>

                        <el-row :gutter="20" style="margin-top:10px" v-if="parceiro.excluido">
                            <el-col :xs="24" :sm="12" :md="8" :lg="6" class="s-input" v-else style="background-color:#000;padding:10px">
                                <div style="color:#ffca00"><i class="fa fa-warning" style="font-size:17px"></i> ESTE REGISTRO FOI EXCLUÍDO<span></span></div>
                                <div style="color:#fff">Ao salvar ele será reabilitado.</div>
                            </el-col>
                        </el-row>

                        <el-row :gutter="20" style="margin-top:10px">
                            <el-col :md="12" style="float:left;color:var(--s-color-primary)">
                                <q-btn label="SALVAR" color="primary" @click="Enviar()" :loading="onrequest" style="width:120px;margin-right:20px" icon="fa fa-save"></q-btn>
                                <i class="fa fa-square"></i> campos necessários
                            </el-col>
                            <el-col :md="12" style="float:right;text-align:right" v-if="!parceiro.excluido">

                                <el-popconfirm width="220"
                                                confirm-button-text="SIM"
                                                cancel-button-text="Não"
                                                :icon="InfoFilled"
                                                icon-color="var(--s-color-primary)"
                                                :title="'Excluir ID#'+parceiro.id+' . '+parceiro.nome+'?'"
                                                @confirm="Excluir()">
                                    <template #reference>
                                            <q-btn label="EXCLUIR" color="red" :loading="onrequest" style="width:120px;margin-right:20px" icon="fa fa-trash"></q-btn>
                                    </template>
                                </el-popconfirm>

                            </el-col>

                        </el-row>


                    </el-col>

				</div>


			</div>




		</div>

	</div>




</template>

<script>
	module.exports = {

        name: 'JCAdminParceiroAlterar',

		components: {

		},

		data: function () {
			return {
				onloading: true,
				onrequest: false,
				view: "form",
				content: "",
				DiaNascimento: 0,
				MesNascimento: 0,
				AnoNascimento: 0,
				senhaConfirma: "",
				carregandoCEP: false,
				carregandoEstados: false,
				carregandoCidades: false,
				carregandoBairros: false,
				novaSenha:"",
				cep: {
					numero: "",
					estado: "",
					cidade: "",
					logradouro: ""
				},
				opcoes: {
					estados: [],
					cidades: [],
					bairros: [],
					sexos: [],
				},
				parceiro: this.$models.parceiro()
			}
		}, computed: {

		},

		props: {
            id: { type: Number, required: true, default: 0 },
		},
		watch: {
		},
		created: function () {
			this.opcoes.sexos = this.$sdata.opcoes.sexos;
            this.$sdata.ObterEstados().then(res => { this.opcoes.estados = res; });
            this.Obter(this.id);
		},
		mounted() {
			
		},
		methods: {

			async Obter(id){

                this.onloading = true;
                var request = await this.$api.Get(("parceiro/obter/" + id));
                this.onloading = false;

				if(request?.status?.success) {

                    this.$root.parceiroRow = this.parceiro = request.result;
                    
					this.carregandoCidades = true; 
                    this.carregandoBairros = true; 
                    this.$sdata.ObterCidades(this.parceiro.idEstado).then(res => { this.opcoes.cidades = res; this.carregandoCidades = false; });
                    this.$sdata.ObterBairros(this.parceiro.idCidade).then(res => { this.opcoes.bairros = res; this.carregandoBairros = false; });

					if(this.$validator.not(this.parceiro.cep))
                        this.cep.numero = this.parceiro.cep = await this.BuscarCep();
					else
						this.cep.numero=this.parceiro.cep;

					this.DiaNascimento = this.parceiro.diaNascimento;
					this.MesNascimento = this.parceiro.mesNascimento;
					this.AnoNascimento = this.parceiro.anoNascimento;


				}



			},


			async Enviar() {

				this.parceiro.idTipo = 5;

				var msg = "";

                if(this.parceiro.tipoPessoa=="PF") {
                    if(this.$validator.not(this.parceiro.cpf))
                        msg+="<b>CPF</b> não informado<br>";
                    else if(!this.$validator.IsCPF(this.parceiro.cpf))
                        msg+="<b>CPF</b> inválido<br>";
                    if(this.$validator.not(this.parceiro.nome))
                        msg+="<b>NOME</b> não informado<br>";
                }
                else {
                    if(this.$validator.not(this.parceiro.cnpj))
                        msg+="<b>CNPJ</b> não informado<br>";
                    else if(!this.$validator.IsCNPJ(this.parceiro.cnpj))
                        msg+="<b>CNPJ</b> inválido<br>";
                    if(this.$validator.not(this.parceiro.razao))
                        msg+="<b>RAZÃO SOCIAL</b> não informada<br>";
                    if(this.$validator.not(this.parceiro.nome))
                        msg+="<b>NOME FANTASIA</b> não informado<br>";
                    if(this.$validator.not(this.parceiro.responsavel))
                        msg+="<b>NOME DO RESPONSÁVEL</b> não informado<br>";
                }


				if (this.$validator.not(this.parceiro.email))
					msg += "<b>E-MAIL</b> não informado<br>";
				else if (!this.$validator.IsEmail(this.parceiro.email))
					msg += "<b>E-MAIL</b> inválido<br>";

				if (this.$validator.not(this.parceiro.telefone))
					msg += "<b>TELEFONE</b> não informado<br>";
				else if (this.parceiro.telefone.length < 14)
					msg += "<b>TELEFONE</b> inválido<br>";

                if(this.$validator.not(this.parceiro.creci)) {
                    msg += "<b>CRECI</b> não informado<br>";
                } else if(this.parceiro.creci.length < 4)
                    msg += "<b>CRECI</b> inválido<br>";
                else {
                    if(this.$validator.not(this.parceiro.creciEstado))
                        msg += "<b>CRECI - ESTADO</b> não selecionado<br>";
                }

				if (this.$validator.not(this.parceiro.estado))
					msg += "<b>ESTADO</b> não selecionado<br>";

				if (this.$validator.not(this.parceiro.cidade))
					msg += "<b>CIDADE</b> não selecionada<br>";

				if (this.$validator.not(this.parceiro.bairro))
					msg += "<b>BAIRRO</b> não selecionado<br>";

				if (this.$validator.not(this.parceiro.logradouro))
					msg += "<b>LOGRADOURO</b> não informado<br>";

				if (this.$validator.not(this.parceiro.numero))
					msg += "<b>NÚMERO</b> não informado (informe <b>SN</b> se não houver)<br>";

                if(this.parceiro.excluido) {
                    if(this.$validator.not(this.novaSenha))
                        msg+="<b>SENHA</b> não informada<br>";
                    else if(this.novaSenha.length<4)
                        msg+="<b>SENHA</b> precisa ter pelo menos 4 caracteres<br>";
                }



				if (msg.length > 0)
					this.$tools.Alert(msg);
				else {

					this.parceiro.AnoNascimento = this.AnoNascimento;
					this.parceiro.MesNascimento = this.MesNascimento;
					this.parceiro.DiaNascimento = this.DiaNascimento;

                    if(this.parceiro.excluido || this.$validator.is(this.novaSenha))
						this.parceiro.senha = this.parceiro.senhaConfirma = (this.novaSenha.length>0)? this.novaSenha : "";

					this.onrequest = true;
					var request = await this.$api.Post("parceiro/alterar", this.parceiro);
					this.onrequest = false;

                    if(this.$validator.is(request?.status?.success)) {
                        this.parceiro.excluido=false;
                        this.$tools.AlertSuccess("Salvo!");
                    }
					//else
					//    this.$tools.AlertSuccess("Não foi possível realizar o cadastro.");

				}
			},




            async Excluir() {

                this.onrequest  = true;
                var request     = await this.$api.Post("parceiro/excluir",this.parceiro);
                this.onrequest  = false;
                
                if(request?.status?.success) {
                    this.parceiro.excluido=true;
                    this.$tools.AlertSuccess("Excluído!");
                }

            },


			CheckDoc() {
				window.setTimeout(() => {
					if (this.$validator.is(this.parceiro.cpf) && !this.$validator.IsCPF(this.parceiro.cpf))
						this.$tools.Alert("CPF inválido");
				}, 500);
			},


			async BuscarEndereco() {

				if (this.cep.numero !== this.parceiro.cep) {

					this.carregandoCEP = true;
					this.carregandoEstados = true;
					this.carregandoCidades = true;
					this.carregandoBairros = true;

					this.cep.cidade = this.parceiro.cidade = "";
					this.cep.logradouro = this.parceiro.logradouro = "";
					this.cep.bairro = this.parceiro.bairro = "";
					this.cep.estado = this.parceiro.estado = "";

					this.parceiro.cep = this.cep.numero;
					let res = await this.$sdata.BuscarEndereco(this.cep.numero);

					if (this.$validator.is(res?.city)) {
						this.cep.cidade = this.parceiro.cidade = res.city;
						this.cep.logradouro = this.parceiro.logradouro = res.address;
						this.cep.bairro = this.parceiro.bairro = res.neighborhood;
						this.cep.estado = this.parceiro.estado = res.state;

						this.$refs.addressnumber.focus();

					}

					this.carregandoCEP = false;
					this.carregandoEstados = false;
					this.carregandoCidades = false;
					this.carregandoBairros = false;
				}
			},


			
			async BuscarCep() {
				var endereco = this.parceiro.estado + "/" + this.parceiro.cidade.replaceAll(" ", "%20") + "/" + this.parceiro.logradouro.replaceAll(" ", "%20")
				var res = await this.$sdata.BuscarCep(endereco);
				c2("Buscar CEP",res.cep)
				return res.cep;
			},




			ObterCidades(estado) {

				this.parceiro.cidade = this.parceiro.bairro = "";

				this.carregandoCidades = true;
				this.opcoes.bairros = [];
				this.opcoes.cidades = [];
				var cidades = [];

				if (this.$validator.is(estado)) {
					var idEstado = this.opcoes.estados.filter((e) => e.value == estado)[0].id;
					this.$sdata.ObterCidades(idEstado).then(res => { this.opcoes.cidades = res; this.carregandoCidades = false; });
				}

			},


			ObterBairros(cidade) {

				this.parceiro.bairro = "";

				this.carregandoBairros = true;
				this.opcoes.bairros = [];
				var bairros = [];

				if (this.$validator.is(cidade)) {
					var idCidade = this.opcoes.cidades.filter((c) => c.value == cidade)[0].id;
					this.$sdata.ObterBairros(idCidade).then(res => { this.opcoes.bairros = res; this.carregandoBairros = false; });
				}

			},

			DefinirBairro(bairro) {
				//this.parceiro.bairro = bairro.label;
				//c2("this.parceiro", this.parceiro)
			},



			ChecarDataNascimento() {
				var res = false;
				if (this.DiaNascimento > 0 && this.MesNascimento > 0) {
					let dt = this.$tools.FormatDateArgs(((this.AnoNascimento == 0) ? "1900" : this.AnoNascimento), this.MesNascimento, this.DiaNascimento);
					//let dt = this.$tools.FormatDateArgs(this.AnoNascimento,this.MesNascimento,this.DiaNascimento);
					res = this.$validator.IsDate(dt);
				} else
					res = true;
				return res;
			},







		}

	}

</script>


<style scoped>
</style>


