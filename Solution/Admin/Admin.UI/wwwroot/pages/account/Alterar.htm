<template>


	<div>
			<el-row v-if="$root.loading">
				<el-col :md="24">
					<c-loading></c-loading>
				</el-col>
			</el-row>
			<el-row v-else>
				<el-col :md="24">
					<el-row>
						<el-col :md="24" class="s-input" style="padding:10px;">
							<div>CPF<span></span></div>
							<el-input @keyup.enter="Alterar()" v-model="usuario.cpf" maxlength="22" v-maska data-maska="###.###.###-##" @blur="CheckDoc" ref="documento"></el-input>
						</el-col>
					</el-row>
					<el-row>
						<el-col :md="24" class="s-input" style="padding:10px;">
							<div>Nome<span></span></div>
							<el-input @keyup.enter="Alterar()" v-model="usuario.nome" placeholder="nome" maxlength="100"></el-input>
						</el-col>
					</el-row>
					<el-row>
						<el-col :md="24" class="s-input" style="padding:10px;">
							<div>E-Mail<span></span></div>
							<el-input @keyup.enter="Alterar()" v-model="usuario.email" placeholder="e-mail" maxlength="40"></el-input>
						</el-col>
					</el-row>
					<el-row>
						<el-col :md="24" class="s-input" style="padding:10px;">
							<div>CRIAR NOVA SENHA<span></span></div>
							<el-input @keyup.enter="Alterar()" v-model="usuario.senha" type="password" placeholder="nova senha" maxlength="40" show-password></el-input>
						</el-col>
					</el-row>
					<el-row>
						<el-col :md="24" class="s-input" style="padding:10px">
							<div>CONFIRMAR NOVA SENHA<span></span></div>
							<el-input @keyup.enter="Alterar()" v-model="senhaConfirma" type="password" placeholder="repetir nova senha" maxlength="20" show-password></el-input>
						</el-col>
					</el-row>

					<el-row>
						<el-col :md="24" class="s-input" style="padding:10px;">
							<q-btn label="Enviar" color="primary" @click="Alterar()" :loading="onrequest"></q-btn><br /><br />
						</el-col>
					</el-row>
				</el-col>
		</el-row>

	</div>



</template>


<script>
    module.exports = {

        name: 'HOME',

        components: {

        },

        data: function () {
            return {
                onrequest			: false,
				view				: "form",
				senhaConfirma		: "",
                usuario				: this.$tools.Unbind(this.$root.usuario),
				token				:null
            }
        }, computed: {

        },

        props: {

        },
        watch: {
        
        },
        created: function () {
            this.$root.SetTitle("Alterar dados", "fa fa-user-edit", null);
        },
        mounted() {
            c2("usuario", this.usuario)
        },
        methods: {



            MudarTipoPessoa() {

                if (this.usuario.tipoPessoa == "PF")
                    this.usuario.cnpj = "";
                else
                    this.usuario.cpf = "";

                window.setTimeout(() => this.$refs.documento.focus(), 300);

            },

            CheckDoc() {
                if (this.$validator.is(this.usuario.cpf) && !this.$validator.IsCPF(this.usuario.cpf))
                    this.$tools.Alert("CPF inválido");
            },



            Alterar(){

				var msg = "";

                if (this.$validator.not(this.usuario.nome))
                    msg += "<b>NOME</b> não informado<br>";

                if (this.usuario.tipoPessoa == "PF") {
                    if (this.$validator.not(this.usuario.cpf))
                        msg += "<b>CPF</b> não informado<br>";
                    else if (!this.$validator.IsCPF(this.usuario.cpf))
                        msg += "<b>CPF</b> inválido<br>";
                }else {
                    if (this.$validator.not(this.usuario.cnpj))
                        msg += "<b>CNPJ</b> não informado<br>";
                    else if (!this.$validator.IsCNPJ(this.usuario.cnpj))
                        msg += "<b>CNPJ</b> inválido<br>";
                }

                if (this.$validator.is(this.usuario.senha)){
                    if (this.usuario.senha.length < 4)
						msg += "<b>SENHA</b> precisa ter pelo menos 4 caracteres<br>";
					if(this.$validator.not(this.senhaConfirma))
						msg += "<b>CONFIRMAR SENHA</b> não informada<br>";
                    else if (this.usuario.senha != this.senhaConfirma)
						msg += "<b>SENHA e CONFIRMAR SENHA</b> não combinam<br>";
				}

				if(msg.length > 0){
					this.$tools.Alert(msg);
				}else{
									
                    this.onrequest = true;

						axios.post(this.$api.BuildURL("usuario/alterar"),this.usuario).then((request) => {
								
								if(request.data.status.success){
										this.usuario.senha = this.senhaConfirma = "";
										this.$root.usuario = this.usuario;
										this.$tools.AlertSuccess("Dados alterados!");
								}else
										this.$tools.AlertNotes(request.data.result);

							}).catch((error) => {
                                this.onrequest = false;
                                c2("error.response.data", error.response.data)
                                if (error.response) {
                                    this.$tools.AlertNotes(error.response.data);
                                } else
                                    this.$tools.Alert("Não foi possível atender a requisição");
							}).finally(() => {
                                this.onrequest = false;
							});

				}
            },



			
	
		






        }

    }








</script>







<style scoped>
.c-tabs {
    
}

.card-waiting{
	display:inline-block;
	min-width:100px;
	background:var(--s-accent-color);
}

.card-approved{
	display:inline-block;
	min-width:100px;
	background:#00c300;
}
.card-declined{
	display:inline-block;
	min-width:100px;
}

.card-content-waiting{
			padding:10px;
			display:inline-block;
			height:auto;
			min-height:132px;
			vertical-align:top;
			width:calc(100% - 420px);
			background: linear-gradient(to right, #fff7d3 0%, #fffcf3 100%);
}
    .card-content-waiting #title{
		color:var(--s-accent-color);
    }

.status-waiting{
	width:100%;
	background: linear-gradient(to right, #ffd891 0%, #fff 100%);
	color:var(--s-accent-color);
	font-size: 11px;
    font-weight: 700;
	padding-left: 10px;
}

.card-content-approved{
			padding:10px;
			display:inline-block;
			height:auto;
			min-height:132px;
			vertical-align:top;
			width:calc(100% - 420px);
			background: linear-gradient(to right, #dcffd3 0%, #f4fff3 100%);
}
    .card-content-approved #title{
		color:#008700;
    }

.status-approved{
	width:100%;
	background: linear-gradient(to right, #a7ff91 0%, #fff 100%);
	color:#019801;
	font-size: 11px;
    font-weight: 700;
	padding-left: 10px;
}


.card-content-declined{
			padding:10px;
			display:inline-block;
			height:auto;
			min-height:132px;
			vertical-align:top;
			width:calc(100% - 30px);
			background: linear-gradient(to right, #fff7d3 0%, #fffcf3 100%);
}

</style>


