<template>
	<div class="s-info">

			<div>

					<div :class="(type=='info')? 's-info-info' : (type=='warning')? 's-info-warning' : (type=='success')? 's-info-success' : 's-info-fail'  " >
						<div>
							<i :class="(type=='info')? 'fa fa-info-circle' : (type=='warning')? 'fa fa-triangle-exclamation' : (type=='success')? 'fa fa-circle-check' : 'fa fa-xmark-circle'  " ></i>
						</div>
						<div v-if="$validator.is(_title)"><span v-html="_title"></span></div>
						<div v-if="$validator.is(_subtitle)" class="s-subtitle"><span v-html="_subtitle"></span></div>

						<div style="padding-top:20px" v-if="$validator.is(_title) || $validator.is(_subtitle)"></div>
					</div>

			</div>

			<div style="text-align:left">
				<div class="s-note" v-if="$validator.is(notes)">
					<s-notes :notes="notes"></s-notes>
				</div>
				<div class="s-note" v-if="$validator.is(apiNotes)">
					<s-notes :apiNotes="apiNotes"></s-notes>
				</div>
			</div>
			<div v-if="status=='loading'">
				<s-loading size="1.4em"></s-loading>
			</div>

                    <!--<s-info title="inserindo" :loading="true"></s-info>
                    <s-info type="warning"  ></s-info>
                    <s-info type="success" subtitle="cliente inserido" ></s-info>
                    <s-info type="fail"></s-info>-->


	</div>
</template>

<script>
module.exports = {
    components: {

	},	
	
	data: function () {
		return {
			_title:null,
			_subtitle:null
		}
	},computed: {
      
	},
	
	props:{
        type:		{ type: String, required: false, default: "info" },
        title:		{ type: String, required: false, default: "" },
        subtitle:	{ type: String, required: false, default: null },
        status:		{ type: String, required: false, default: null },
        notes:		{ type: Array, required: false, default: [] },
        apiNotes:	{ type: Array, required: false, default: [] },
	},
	watch:{
	},
	created: function () {
		this._title = this.title;
		this._subtitle = this.subtitle;
		if(this.$validator.not(this.title))
			this._title = (this.type=="info")? "PROCESSANDO" : (this.type=="warning")? "ATENÇÃO" : (this.type=="success")? "SUCESSO" : "ERRO";
		if((this.type=="warning" || this.type=="fail" || this.type=="error") && this.$validator.not(this._subtitle))
			this._subtitle="não foi possível antender a requisição";

		if( (this.$validator.is(this.notes) || this.$validator.is(this.apiNotes)) && this.$validator.not(this._subtitle) && (this.type=="warning" || this.type=="error" || this.type=="fail" ) )
				this._subtitle="não foi possível atender a requisição,<br />verifique as pendências";

	 },
	mounted(){
				
	},		  
	methods: {
        Back() {
        }
	}				
		
}

</script>


<style scoped>

.s-info {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    text-align: center;
    box-sizing: border-box;
    /*padding: var(--el-result-padding);*/
    padding: 0px;
	min-width:320px;
    margin: 0;
    font-size: 20px;
    font-weight: 600;
	padding-bottom:10px;
}

i {
	padding:10px;
	font-size:40px
}

.s-subtitle{
    color: rgb(173 173 173);
    padding-top: 20px;
    font-size: 16px;
    font-weight: 400;
}

.s-note{
    color: rgb(173 173 173);
    font-size: 16px;
    font-weight: 600;
	margin-bottom:20px;
}

.s-info-info {
    color:#208eff;
}

.s-info-warning {
    color:#ffbf30;
}
.s-info-success {
    color:#10e965;
}
.s-info-fail {
    color:#ff00a5;
}



</style>


