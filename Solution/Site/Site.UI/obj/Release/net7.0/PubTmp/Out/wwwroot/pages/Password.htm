<template>
	<div style="text-align:center;width:100%">

					<div style="text-align:center;width:100%;width:100%">
						
							<div style="background:var(--s-accent-color);min-height:320px;width:400px;display:inline-block">

								<div style="text-align:center;width:100%;padding-top:30px">
									<p class="title">
										Redefinição de Senha
									</p>
								</div>

								<div class="form" id="form" v-if="view == 'form' " style="margin-top:20px" >

											<el-col :md="24" >
														<el-row :gutter="20">
																<el-col :md="24" class="s-input" >
																				<div>NOVA SENHA<span></span></div>
																				<el-input  @keyup.enter="Send()"   v-model="usuario.senha"   type="password"    placeholder="nova senha"    show-password  ></el-input>
																</el-col>
																<el-col :md="24" class="s-input" style="margin-top:10px" >
																				<div>CONFIRMAR NOVA SENHA<span></span></div>
																				<el-input   @keyup.enter="Send()"  v-model="senhaConfirma"   type="password"    placeholder="repetir nova senha"    show-password  ></el-input>
																</el-col>
														</el-row>
														<el-row :gutter="20">
																<el-col :md="24" style="margin-top:20px">
																		<q-btn label="Enviar" color="secondary" @click="Send()" style="width:100%;height:40px"></q-btn>
																</el-col>
														</el-row>
											</el-col>
								</div>


								<div v-if="view=='sending'" style="min-height:320px">
											<br /><br />
											<div class="title" style="color:#fff"><b>Enviando</b></div>
											<br /><br />
											<c-loading size="3em" color="#fffff"></c-loading>
								</div>

								<div v-if="view=='alert'">
											<br /><br />
											<div class="title" style="color:var(--s-color-yellow)"><b><i class="fa-solid fa-triangle-exclamation"></i> Atenção</b></div>
											<br /><br />
											<br /><span v-html="messageAlert"></span>
											<br /><br />
											<q-btn color="white" text-color="indigo-10" label="VOLTAR" @click="ShowView('form')" style="width:160px;"  id="btn_voltar_5"></q-btn>
								</div>

								<div v-if="view=='success'" style="min-height:374px">
											<div >
												<br />
												<br />
												<div class="title" style="color:#6bff71"><b><i class="fa fa-circle-check" style="color:#6bff71"></i> Sucesso</b></div>
												<br />
												<span style="font-size:17px;color:#FFF"><b>Senha alterada!</b></span>
												<br />
												<br />
												<q-btn  label="EFETUAR LOGIN" color="secondary"		style="font-size:18px;width:50%;height:50px;border-radius:20px" @click="$root.Login()"></q-btn>
											</div>
								</div>

								<div v-if="view=='fail'">
											<div >
												<br />
												<br />
												<div class="title" style="color:#ffc3e0"><b><i class="fa fa-circle-xmark" style="color:#ffc3e0"></i> ERRO</b></div>
												<br />
												<span style="font-size:17px;color:#FFF"><b>Algo deu errado, favor tentar novamente.</b></span>
												<br />
												<br />
												<q-btn  label="VOLTAR" color="secondary"		style="font-size:18px;width:50%;height:50px;border-radius:20px"  @click="ShowView('form')"></q-btn>
											</div>
								</div>


						</div>

					</div>






	</div>
</template>



<script>
	module.exports = {
		components: {

		},

		data: function () {
			return {
				usuario: { login: "", senha: "", token:"" },
				senhaConfirma: "",
				isPwd: true,
				term1: true,
				term2: true,
				term3: false,
                view: "form",
				isPwd: true
			}
		}, computed: {

		},

		props: {

		},
		watch: {
		},
		created: function () {


		},
		mounted() {
			//localhost:2222/?t=61565156&/#/password
            //let uri		= window.location.search.substring(1);
            //let params	= new URLSearchParams(uri);
			////console.log(params.get("t"));
			//this.usuario.token = params.get("t");

			this.usuario.token = this.$root.params.t;
			c(this.usuario.token);
		},
		methods: {


			ShowView(v) {
				this.view = v;
			},










			Send() {

				var valid = true;

				var msg = "";

				if (!this.$validator.is(this.usuario.token))
                    msg += "Esta requisição não é mais válida (token expirou).<br><br>Clique em <b>Entrar</b> novamente e <br><b>solicite novamente a redefinição na tela de login</b>.<br><br>";
				else if (!this.$validator.is(this.usuario.senha))
                    msg += "Favor preencher uma senha.<br>";
                else if (this.usuario.senha.length < 4)
                    msg += "Favor preencher a senha com pelo menos 4 dígitos.<br>";
                else if (!this.$validator.is(this.senhaConfirma))
                    msg += "Favor preencher a confirmação da senha.<br>";
                else if (this.usuario.senha != this.senhaConfirma)
                    msg += "Senha e Confirmação de senha estão diferentes.<br>";



				if (this.$validator.is(msg)) {
					this.$tools.Alert(msg);
				} else {

					this.ShowView("sending");
					window.setTimeout(()=>this.ShowView("success"),1000);
					/*
					axios.post(this.$validator.BuildURL("/home/senha/update"), this.user).then((response) => {
						//console.log(response.data.info);
						if (response.data.isException) {
                            if (response.data.info == "EMPTY")
                                this.messageFail = "senha empty.";
							else if (response.data.info == "FAIL")
                                this.messageFail = "Algo deu errado, favor tentar novamente.";
							else if (response.data.info == "NOT_FOUND")
                                this.messageFail = "Esta requisição não é mais válida (token expirou). Favor solicitar novamente recuperação de senha através do login";
							this.ShowView("fail");
						} else {
                            this.messageSuccess = "Sua senha foi recuperada.<br>Pode realizar o <b>login</b> agora.";
							this.ShowView("success");
						}
					}).catch((error) => {
						this.messageFail = "Something going wrong, please try again.";
						this.ShowView("fail");
						console.log(error);
					});
					*/

				}

				/*
						  this.viewAlert = true;

								  this.$root.$q.notify({
									  group: false, // required to be updatable
									  message: 'Inserindo...',
									  spinner: true,
									  color: 'warning',
									  timeout: 120000,
									  //caption: '0%',
									  position: "center"
								  });
							  */


			},











		}

	}

</script>


<style scoped>


	.box-login {
		width: 100%;
		text-align:center;
		max-width: 900px;
		padding: 10px;
		font-size: 18px;
		font-weight: 300;
		height: 260px;
		color: #FFF;
		background-color: #002959;
		border-radius: 10px;
		text-align:center;

		min-width:320px;
		max-width:360px;
		width:100%;
		height:100%;
		min-height:300px;

	}

	.box-login-footer {
		padding: 10px;
		font-size: 18px;
		font-weight: 300;
		height: 60px;
		color: #FFF;
		background-color: #002959;
		border-radius: 10px;
	}
</style>


