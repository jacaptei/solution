<template>



			<div>
						<div style="margin-top:40px;text-align:center;width:100%">
							<div class="form-area" id="form-area" style="background:var(--s-accent-color);">

								<div style="text-align:center;width:100%;padding-top:50px">
									<p class="title">
										Indique um imóvel agora
									</p>
								</div>

								<div class="form" id="form">
									<div  v-if="view == 'form_pt1' ">
											<el-col :md="24">
														<el-row :gutter="20">

																<el-col :md="24" style="padding-left:20px;font-weight:700;font-size:20px">
																			Informe <b>seus dados</b>
																</el-col>

																<el-col :sm="12"  :md="6"  :lg="6" class="s-input" >
																				<div>CPF<span></span></div>
																				<el-input @keyup.enter="Next()" v-model="indicador.cpf"  maxlength="22" v-maska data-maska="###.###.###-##" @blur="CheckDoc"></el-input>
																</el-col>
																<el-col :sm="12"  :md="6"  :lg="6" class="s-input" >
																				<div>NOME COMPLETO<span></span></div>
																				<el-input @keyup.enter="Next()" v-model="indicador.nome" placeholder="" maxlength="80" input-style="text-transform:uppercase;"></el-input>
																</el-col>
																<el-col :sm="12"  :md="6"  :lg="6" class="s-input" >
																		<div>SEXO <span></span></div>

																		<el-select filterable v-model="indicador.sexo" class="m-4" placeholder="Selecionar" size="large" style="width:100%">
																				<el-option
																					v-for="item in opcoes.sexos"
																					:key="item.id"
																					:label="item.label"
																					:value="item.value"
																				></el-option>
																		</el-select>
																</el-col>
										
																<el-col :sm="12"  :md="6"  :lg="68" class="s-input" >
																				<div>E-MAIL <span></span></div>
																				<el-input @keyup.enter="Next()" v-model="indicador.email" placeholder="" maxlength="80" input-style="text-transform:lowercase;"></el-input>
																</el-col>
																<el-col :sm="12"  :md="6"  :lg="6" class="s-input" >
																				<div>TELEFONE <span></span></div>
																				<el-input @keyup.enter="Next()" v-model="indicador.telefone" placeholder="(11) 11111-1111" maxlength="40" input-style="text-transform:lowercase;" v-maska data-maska="(##) #####-#### ********************"></el-input>
																</el-col>
																<el-col :md="24" style="margin-top:20px">
																		<q-btn label="PROSSEGUIR" color="secondary"  @click="Next" style="width:100%;height:40px"></q-btn>
																</el-col>
														</el-row>


												</el-col>
										</div>
										<div v-else-if="view == 'form_pt2' ">
														<el-row :gutter="20" >


																<el-col :md="24" style="padding-left:20px;font-weight:700;font-size:20px">
																			Informe dados do <b>proprietário e localização do Imóvel a indicar</b>
																</el-col>


																<el-col :sm="12"  :md="6"  :lg="8" class="s-input" >
																			<div><p>CEP do Imóvel</p><span></span></div>
								                                            <el-input v-model="cep.numero" placeholder="" ref="postalCode" v-maska data-maska="#####-###" @keyup="()=>{  if(cep.numero.length>=9){BuscarEndereco();} }">
                                                                                <template #append>
																						<c-loading size="20px" v-if="carregandoCEP" ></c-loading>
                                                                                        <i class="fa fa-search" v-else-if="(cep.numero.length < 9)" style="color:var(--s-accent-color)" @click="$tools.Alert('Preencha todo o CEP para poder realizar a busca.')" ></i>
                                                                                        <i class="fa fa-search" v-else style="color:var(--s-accent-color);cursor:pointer" @click="BuscarEndereco"></i>
                                                                                </template>
                                                                            </el-input>
																</el-col>

																<el-col :sm="12"  :md="6"  :lg="8" class="s-input" >
																				<div><p>ESTADO do Imóvel</p><span></span></div>
																				<div style="height:40px" v-if="carregandoEstados">
																					<c-loading size="30px" style="padding-left:5px"></c-loading>
																				</div>
																				<el-select v-else filterable v-model="indicador.estado" class="m-4" placeholder="Selecionar" size="large" style="width:100%" @change="(item)=>{ObterCidades(item);enableFilterButton = true;}">
																						<el-option
																							v-for="item in opcoes.estados"
																							:key="item.id"
																							:label="item.label"
																							:value="item.value"
																						></el-option>
																				</el-select>
																</el-col>
																<el-col :sm="12"  :md="6"  :lg="8" class="s-input">
																				<div><p>CIDADE do Imóvel</p><span></span></div>
																				<div style="height:40px" v-if="carregandoCidades">
																					<c-loading size="30px" style="padding-left:5px"></c-loading>
																				</div>
																				<el-select v-else v-model="indicador.cidade" filterable class="m-4" placeholder="Selecionar" size="large" style="width:100%" @click="()=>{ if($validator.not(indicador.estado)){ $tools.Alert('Selecione um <b>Estado</b> antes');} }" @change="(item)=>{ObterBairros(item);enableFilterButton = true;}">
																						<el-option
																							v-for="item in opcoes.cidades"
																							:key="item.id"
																							:label="item.label"
																							:value="item"
																						></el-option>
																				</el-select>
																</el-col>
																<el-col :sm="12"  :md="6"  :lg="8" class="s-input">
																		<div><p>BAIRRO do Imóvel</p><span></span></div>
																		<div style="height:40px" v-if="carregandoBairros">
																			<c-loading size="30px" style="padding-left:5px"></c-loading>
																		</div>
																		<el-select v-else v-model="indicador.bairro" filterable :clearable="true" class="m-4" placeholder="Selecionar" size="large" style="width:100%;" @click="()=>{ if($validator.not(indicador.estado)){ $tools.Alert('Selecione <b>Estado</b> e <b>Cidade</b> antes');} }" @change="(item)=>{DefinirBairro(item);enableFilterButton = true;}">
																				<el-option
																					v-for="item in opcoes.bairros"
																					:key="item.id"
																					:label="item.label"
																					:value="item.value"
																				></el-option>
																		</el-select>
																</el-col>
																<el-col :sm="12"  :md="6"  :lg="8" class="s-input" >
																				<div>LOGRADOURO do Imóvel<span style="color:#808080">&nbsp;rua, avenida, praça, etc</span></div>
																				<el-input @keyup.enter="Send()" v-model="indicador.logradouro" placeholder="" maxlength="80" input-style="text-transform:uppercase;"></el-input>
																</el-col>
																<el-col :sm="12"  :md="6"  :lg="8" class="s-input" >
																				<div>NÚMERO do Imóvel<span style="color:#808080">&nbsp;informe <b>SN</b> se não houver</span></div>
																				<el-input @keyup.enter="Send()" v-model="indicador.numero" placeholder="" maxlength="80" input-style="text-transform:uppercase;" ref="addressnumber"></el-input>
																</el-col>
																<el-col :sm="12"  :md="6"  :lg="8" class="s-input" >
																				<div>NOME do Proprietário do imóvel <span></span></div>
																				<el-input @keyup.enter="Next()" v-model="indicador.proprietarioNome" placeholder="" maxlength="80" input-style="text-transform:uppercase;"></el-input>
																</el-col>
																<el-col :sm="12"  :md="6"  :lg="8" class="s-input" >
																				<div>TELEFONE do Proprietário do imóvel <span></span></div>
																				<el-input @keyup.enter="Next()" v-model="indicador.proprietarioTelefone" placeholder="(11) 11111-1111" maxlength="40"  v-maska data-maska="(##) #####-#### ********************"></el-input>
																</el-col>
																<el-col :sm="12"  :md="6"  :lg="8" class="s-input" >
																				<div>Observação <span></span></div>
																				<el-input @keyup.enter="Next()" v-model="indicador.obs" maxlength="200" ></el-input>
																</el-col>

														</el-row>

														<el-row :gutter="20">
																<el-col :md="24" style="margin:20px">
																				<el-checkbox v-model="indicador.aceitouPoliticaPrivacidade" >o proprietário está ciente do compartilhamento de seus dados</el-checkbox>
																</el-col>
														</el-row>

														<el-row :gutter="20">
																<el-col :md="6" style="margin-top:0px">
																		<q-btn label="Voltar" color="grey" @click="ShowView('form_pt1')" style="width:100%;height:40px"></q-btn>
																</el-col>
																<el-col :md="18" style="margin-top:0px">
																		<q-btn label="Enviar" color="secondary" @click="Send()" style="width:100%;height:40px"></q-btn>
																</el-col>
														</el-row>

									</div>


								</div>



									<div v-if="view=='sending'" style="min-height:374px">
												<br /><br />
												<div class="title" style="color:#fff"><b>Enviando</b></div>
												<br /><br />
												<c-loading size="3em" color="#fff"></c-loading>
									</div>

									<div v-else-if="view=='alert'">
												<br /><br />
												<div class="title" style="color:var(--s-color-yellow)"><b><i class="fa-solid fa-triangle-exclamation"></i> Atenção</b></div>
												<br /><br />
												<br /><span v-html="messageAlert"></span>
												<br /><br />
												<q-btn color="white" text-color="indigo-10" label="VOLTAR" @click="ShowView(viewLast)" style="width:160px;"  id="btn_voltar_5"></q-btn>
									</div>

									<div v-else-if="view=='success'" style="min-height:374px">
												<div >
													<br />
													<br />
													<div class="title" style="color:#fff"><b><i class="fa fa-circle-check" style="color:#fff"></i> Sucesso</b></div>
													<br />
													<span style="font-size:17px;color:#fff"><b>Cadastro efetuado!</b></span>
													<br />
													<br />
													<div v-if="indicador.idTipo == 1">
														<span style="font-size:17px;color:#fff;font-weight:700;padding:10px">Lhe enviamos um e-mail com um link para você <b>CONFIRMAR O CADASTRO.</b><br />E-mail enviado por <b>site@jacaptei.com.br</b>, verifique a caixa de SPAM se não receber.</span>
														<br />
														<br />
														<q-btn  label="Ok" color="secondary"		style="font-size:18px;width:50%;height:50px;border-radius:20px" @click="ShowView('form')"></q-btn>
													</div>
													<div v-else-if="indicador.idTipo == 2">
														<div style="font-size:17px;color:#fff;font-weight:700;padding:10px">Agora é só entrar em contato para vender seu imóvel</div>
														<div style="background-color:#fff;color:var(--s-accent-color);font-weight:700;padding:10px">
																<q-btn color="green-7" style="font-size:20px;min-width:320px;width:50%;height:30px;border-radius:20px" @click="VenderAgora()">
																		<i class="fab fa-whatsapp" style="font-size:26px;margin-right:10px;font-weight:500" ></i>	VENDER AGORA  (31) 4003-9998
																</q-btn> 
														</div>
														<br />
														<br />
														<q-btn  label="voltar" color="secondary"		style="font-size:18px;width:240px;height:50px;border-radius:20px" @click="ShowView('form')"></q-btn>
													</div>
													<div v-else>
														<br />
														<br />
														<q-btn  label="Ok" color="secondary"		style="font-size:18px;width:50%;height:50px;border-radius:20px" @click="ShowView('form')"></q-btn>
													</div>
												</div>
									</div>

									<div v-else-if="view=='fail'">
												<div class="title" style="color:var(--s-color-red)"><b><i class="fa fa-circle-xmark"></i> Falhou</b></div>
												<br /><br />
												<br /><span v-html="messageFail"></span>
												<br /><br />
												<q-btn color="white" text-color="indigo-10" label="VOLTAR" @click="ShowView(viewLast)" style="width:160px;"  id="btn_voltar_5"></q-btn>
									</div>





							</div>
						</div>

			</div>




</template>

<script>
module.exports = {
    components: {

	},	
	
	data: function () {
		return {
			onRequest:false,
            view:"form_pt1",
			messageSuccess		: "Enviado!",
			messageAlert		: "",
			messageFail			: "Não foi possível enviar os dados, favor tentar novamente.",
			content:"",
			DiaNascimento:0, 
			MesNascimento:0,
			AnoNascimento:0,
			senhaConfirma:"",
			carregandoCEP:false,
			carregandoEstados:false,
			carregandoCidades:false,
			carregandoBairros:false,
			indicador:{
                nome: "TESTE",
                cpf: "282.495.258-09",
                sexo: "FEMININO	",
                email: "prvgnt@gmail.com",
                telefone: "(11) 975303200",
                cep: "04004-010",
                logradouro: "RUA CARLOS STEINEN",
                numero: "100",
                complemento: "",
                bairro: "PARAÍSO",
                cidade: "SÃO PAULO",
                estado: "SP",
                proprietarioNome:"PROP TESTE",
                proprietarioTelefone:"(11) 65161-651651",
				obs:"2 anos iptu atrasados",
                aceitouPoliticaPrivacidade: false
			},
			cep:{
				numero:"",
				estado:"",
				cidade:"",
				logradouro:""
			},
			opcoes:{ 
					estados:  this.$sdata.forms.states ,
					cidades: [] ,
					estadosCreci:  this.$sdata.forms.states ,
					cidadesCreci: [] ,
					bairros: [] ,
					sexos:[{id:1,label:"NÃO APLICÁVEL", value:"NA"},{id:2,label:"MASCULINO", value:"MASCULINO"},{id:3,label:"FEMININO", value:"FEMININO"}],
				}
		}
	},computed: {
      
	},
	
	props:{
	},
	watch:{
	},
	created: function () {
        //this.indicador = this.$models.usuario();
		//this.opcoes.estados = this.$sdata.forms.states;
	 },
	mounted(){
		var count=0;
		//c2("idTipo",this.indicador.idTipo)
		//c2("tipo",this.indicador.tipo)
	},		  
	methods: {

         async BuscarEndereco(){

                if(this.cep.numero !== this.indicador.cep){
                            
							this.carregandoCEP		= true;
							this.carregandoEstados	= true;
							this.carregandoCidades	= true;
							this.carregandoBairros	= true;

                            this.cep.cidade             = this.indicador.cidade     = ""  ;
                            this.cep.logradouro         = this.indicador.logradouro = ""  ;
                            this.cep.bairro				= this.indicador.bairro		= ""  ;
                            this.cep.estado             = this.indicador.estado     = ""  ;

                            this.indicador.cep = this.cep.numero;
                            let res = await this.$sdata.SearchAddress(this.cep.numero);
                            if(this.$validator.is(res?.city)){
                                this.cep.cidade             = this.indicador.cidade     = res.city            ;
                                this.cep.logradouro         = this.indicador.logradouro = res.address         ;
                                this.cep.bairro				= this.indicador.bairro		= res.neighborhood    ;
                                this.cep.estado             = this.indicador.estado     = res.state           ;
                                //addressReference = res.addressReference;
                                this.$refs.addressnumber.focus();
								//c2("cep",this.cep)
                            }
                            
							this.carregandoCEP		= false;
							this.carregandoEstados	= false;
							this.carregandoCidades	= false;
							this.carregandoBairros	= false;
                }
         },




		ObterCidades(uf){

								this.carregandoCidades = true;
								this.indicador.cidade = "";
                                this.opcoes.bairros = [];
								this.opcoes.cidades = [];
                                var cidades = [];

                                if(this.$validator.is(uf)){

                                        var url = this.$api.BuildLocationURL("ObterCidades") + "/" + uf;

    					                axios.get(url).then((request) => {
                                                    if(request.data){
                                                        request.data.result.forEach((item,index)=>{
                                                                    cidades.push({id:item.id, value:  this.$tools.Upper(item.name), label:  this.$tools.Upper(item.name) });
                                                        });
                                                        this.opcoes.cidades     = cidades;
                                                    }
	                                        }).catch((error) => {
								                ce(error);
								                if(error.response)
								                    ce(error.response);
								                ce("Não foi possível obter cidades.");
							                }).finally(() => {
                                                this.carregandoCidades = false;
							                });

                            }else
                                this.carregandoCidades = false;
		},


		ObterBairros(cidade){
			
								this.indicador.cidade = this.indicador.cidade.label;
								//c2("this.indicador.cidade",this.indicador.cidade);

								this.carregandoBairros = true;
                                this.opcoes.bairros = [];
                                var bairros = [];

                                if(this.$validator.is(cidade)){

                                        var url = this.$api.BuildLocationURL("ObterBairros") + "/" + cidade.id;

    					                axios.get(url).then((request) => {
                                                    if(request.data){
                                                        request.data.result.forEach((item,index)=>{
                                                                    bairros.push({id: item.id, value: this.$tools.Upper(item.name), label:  this.$tools.Upper(item.name) });
                                                        });
                                                        this.opcoes.bairros     = bairros;
                                                    }
	                                        }).catch((error) => {
								                ce(error);
								                if(error.response)
								                    ce(error.response);
								                ce("Não foi possível obter bairros.");
							                }).finally(() => {
                                                this.carregandoBairros = false;
							                });

                            }else
                                this.carregandoBairros = false;
		},

	DefinirBairro(bairro){
			c(bairro)
	},



        CheckDoc(){
            if(this.$validator.is(this.indicador.cpf) && !this.$validator.IsCPF(this.indicador.cpf))
                this.$tools.Alert("CPF inválido");
        },


		ShowView(v){
			this.view = v;
		},


		Next(){
				var msg = "";

				if (this.$validator.not(this.indicador.cpf))
					msg += "<b>CPF</b> não informado<br>";
				else if (!this.$validator.IsCPF(this.indicador.cpf))
					msg += "<b>CPF</b> inválido<br>";

				if (this.$validator.not(this.indicador.nome))
					msg += "<b>NOME</b> não informado<br>";

				if (this.$validator.not(this.indicador.email))
					msg += "<b>E-MAIL</b> não informado<br>";
				else if (!this.$validator.IsEmail(this.indicador.email))
					msg += "<b>E-MAIL</b> inválido<br>";

				if (this.$validator.not(this.indicador.telefone))
					msg += "<b>TELEFONE</b> não informado<br>";
				else if (this.indicador.telefone.length < 14)
					msg += "<b>TELEFONE</b> inválido<br>";

				if (msg.length > 0) {
					this.$tools.Alert(msg);
				} else
                    this.ShowView("form_pt2")

				
		},


		Send(){

				var msg = "";

				if(this.$validator.not(this.indicador.cpf))
					msg += "<b>CPF</b> não informado<br>";
				else if(!this.$validator.IsCPF(this.indicador.cpf))
                    msg += "<b>CPF</b> inválido<br>";

				if(this.$validator.not(this.indicador.nome))
					msg += "<b>NOME</b> não informado<br>";

				if(this.$validator.not(this.indicador.email))
					msg += "<b>E-MAIL</b> não informado<br>";
				else if(!this.$validator.IsEmail(this.indicador.email))
					msg += "<b>E-MAIL</b> inválido<br>";

				if(this.$validator.not(this.indicador.telefone))
					msg += "<b>TELEFONE</b> não informado<br>";
				else if(this.indicador.telefone.length < 14)
					msg += "<b>TELEFONE</b> inválido<br>";


				if(this.$validator.not(this.indicador.estado))
					msg += "<b>ESTADO</b> não selecionado<br>";

				if(this.$validator.not(this.indicador.cidade))
					msg += "<b>CIDADE</b> não selecionada<br>";

				if(this.$validator.not(this.indicador.bairro))
					msg += "<b>BAIRRO</b> não selecionado<br>";

				if(this.$validator.not(this.indicador.logradouro))
					msg += "<b>LOGRADOURO</b> não informado<br>";

				if(this.$validator.not(this.indicador.numero))
					msg += "<b>NÚMERO</b> não informado (informe <b>SN</b> se não houver)<br>";



				if(!this.indicador.aceitouPoliticaPrivacidade)
					msg += "<b>PROPRIETÁRIO</b> deve estar ciente do compartilhamento dos dados<br>";


				if(msg.length > 0){
					this.$tools.Alert(msg);
				}else{

						msg = "";

						msg += "<br><b>Indicado por</b><br>";
						msg += "<br>Nome: "     + this.indicador.nome;
						msg += "<br>CPF: "      + this.indicador.cpf;
						msg += "<br>E-mail: "   + this.indicador.email;
						msg += "<br>Telefone: " + this.indicador.telefone;

						msg += "<br><br>";
						msg += "<br><b>Proprietário</b><br>";
						msg += "<br>Nome: "      + this.indicador.proprietarioNome;
						msg += "<br>Telefone: "  + this.indicador.proprietarioTelefone;
                
						msg += "<br><br>";
						msg += "<br><b>Imóvel</b><br>";
						msg += "<br>CEP: "      + this.indicador.cep;
						msg += "<br>Endereço: " + this.indicador.logradouro + ", " + this.indicador.numero;
						msg += "<br>Cidade: "   + this.indicador.cidade;
						msg += "<br>Estado: "   + this.indicador.estado;

						msg += "<br><br>";
						msg += "<br><b>Observações</b><br>";
						msg += this.indicador.obs;


						this.ShowView('sending');

						var stringpost = { message: msg };
						//window.setTimeout(()=>this.ShowView('success'),1000);
						//c2("this.indicador",this.indicador)

                    axios.post(this.$api.BuildURL("IndicarImovel"), stringpost).then((request) => {
								c(request)
								if(request.data.success){
									this.ShowView("success");
								}else{
                                    this.ShowView("form_pt1");
									this.$tools.Alert(request.data.messages);
								}
							}).catch((error) => {
								ce(error);
								this.ShowView("form_pt1");
								this.$tools.Alert("Não foi possível atender a requisição");
							}).finally(() => {
								
							});

				}
			},











	}				
		
}

</script>


<style scoped>
.s-input{
	margin:20px;
	margin-bottom:0px;
	height:70px;
}
</style>


