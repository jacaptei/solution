<template>



    <div>
        <div style="margin-top:40px;text-align:center;width:100%">
            <div class="form-area" id="form-area" style="background:var(--s-accent-color);min-height:540px">

                <div style="text-align:center;width:100%;padding-top:50px">
                    <p class="title">
                        Faça o cadastro e aproveite os benefícios
                    </p>
                </div>

                <div class="form" id="form" v-if="view == 'form' ">
                    <div>
                        <el-col :md="24">

                            <el-row :gutter="20">

                                <el-col :xs="24" :sm="24" :md="10" :lg="8" class="s-input">
                                    <q-btn-toggle v-model="contaNova"
                                                  toggle-color="primary"
                                                  style="margin-top:4px"
                                                  :options="[
                                                {label: 'CONTRATAR NOVO PLANO',    value: true },
                                                {label: 'INSERIR TOKEN DE UMA CONTA EXISTENTE', value: false}
                                              ]"
                                                  @click="MudarConta"></q-btn-toggle>
                                </el-col>

                                <el-col :xs="24" :sm="24" :md="12" :lg="15" style="max-width:920px" class="s-input" v-if="contaNova">
                                    <div>
                                        SELECIONAR PLANO<span></span>
                                    </div>

                                    <el-select filterable v-model="$root.usuario.idPlano" class="m-4" placeholder="Selecionar" size="large" style="width:100%">
                                        <el-option v-for="item in [
                                                                    {label: 'BASIC',  value: 2 },
                                                                    {label: 'PRO',  value: 3 },
                                                                    {label: 'ADVANCED',  value: 4 }
                                                                ]"
                                                   :key="item.value"
                                                   :label="item.label"
                                                   :value="item.value"></el-option>
                                    </el-select>
                                </el-col>
                                <el-col :xs="24" :sm="24" :md="12" :lg="15" style="max-width:920px" class="s-input" v-else>
                                    <div>
                                        INSERIR TOKEN DA CONTA<span></span>
                                        <i class="fa fa-question-circle" style="padding-left:10px;cursor:pointer" @click="$tools.Alert('Se já estiver associado à algum plano contratado, informe o token recebido pelo dono da conta criada.')">
                                            <q-tooltip anchor="top middle" self="bottom middle" :offset="[10, 10]" style="font-size:11pt">
                                                Se já estiver associado à algum plano contratado, informe o token recebido pelo dono da conta criada.
                                            </q-tooltip>
                                        </i>
                                    </div>
                                    <el-input @keyup.enter="Send()" v-model="$root.usuario.tokenConta" maxlength="200" ref="token"></el-input>
                                </el-col>

                            </el-row>



                            <el-row :gutter="20">

                                <el-col :xs="24" :sm="12" :md="8" :lg="10" class="s-input">
                                    <div>SOU<span></span></div>

                                    <q-btn-toggle v-model="$root.usuario.tipoPessoa"
                                                  toggle-color="primary"
                                                  style="margin-top:4px"
                                                  :options="[
                                            {label: 'Pessoa Física (PF)',   value: 'PF'},
                                            {label: 'Pessoa Juridica (PJ)', value: 'PJ'}
                                          ]"
                                                  @click="MudarTipoPessoa">

                                    </q-btn-toggle>

                                </el-col>
                                <el-col :xs="24" :sm="12" :md="8" :lg="10" class="s-input" v-if="$root.usuario.tipoPessoa == 'PF'">
                                    <div>CPF<span></span></div>
                                    <el-input @keyup.enter="Send()" v-model="$root.usuario.cpf" maxlength="22" v-maska data-maska="###.###.###-##" @blur="CheckDoc" ref="documento"></el-input>
                                </el-col>
                                <el-col :xs="24" :sm="12" :md="8" :lg="10" class="s-input" v-else>
                                    <div>CNPJ<span></span></div>
                                    <el-input @keyup.enter="Send()" v-model="$root.usuario.cnpj" maxlength="22" v-maska data-maska="##.###.###/####-##" @blur="CheckDoc" ref="documento"></el-input>
                                </el-col>
                                <el-col :xs="24" :sm="12" :md="8" :lg="10" class="s-input" v-if="$root.usuario.tipoPessoa == 'PJ'">
                                    <div>RAZÃO SOCIAL <span></span></div>
                                    <el-input @keyup.enter="Send()" v-model="$root.usuario.razao" placeholder="" maxlength="80" input-style="text-transform:uppercase;"></el-input>
                                </el-col>
                                <el-col :xs="24" :sm="12" :md="8" :lg="10" class="s-input">
                                    <div>
                                        <span></span><span></span>
                                        <div v-if="$root.usuario.tipoPessoa == 'PF'">NOME COMPLETO</div><div v-else>NOME FANTASIA &nbsp;&nbsp;<span style="padding-left:10px;color:var(--s-accent-color);cursor:pointer" @click="()=>{$root.usuario.nome = $root.usuario.razao}"><i class="fa fa-copy" style="color:var(--s-accent-color)"></i> copiar razão</span></div>
                                    </div>
                                    <el-input @keyup.enter="Send()" v-model="$root.usuario.nome" placeholder="" maxlength="80" input-style="text-transform:uppercase;"></el-input>
                                </el-col>
                                <el-col :xs="24" :sm="12" :md="8" :lg="10" class="s-input" v-if="$root.usuario.tipoPessoa == 'PJ'">
                                    <div>NOME DO RESPONSÁVEL <span></span></div>
                                    <el-input @keyup.enter="Send()" v-model="$root.usuario.responsavel" placeholder="" maxlength="80" input-style="text-transform:uppercase;"></el-input>
                                </el-col>
                                <el-col :xs="24" :sm="12" :md="8" :lg="10" class="s-input">
                                    <div>E-MAIL <span></span></div>
                                    <el-input @keyup.enter="Send()" v-model="$root.usuario.email" placeholder="" maxlength="80" input-style="text-transform:lowercase;"></el-input>
                                </el-col>
                                <el-col :xs="24" :sm="12" :md="8" :lg="10" class="s-input">
                                    <div>TELEFONE <span></span></div>
                                    <el-input @keyup.enter="Send()" v-model="$root.usuario.telefone" placeholder="(11) 11111-1111" maxlength="40" input-style="text-transform:lowercase;" v-maska data-maska="(##) #####-#### ********************"></el-input>
                                </el-col>
                                <el-col :sm="12" :md="12" :lg="8" class="s-input" v-if="$root.usuario.tipoPessoa == 'PF'">
                                    <div>DATA DE NASCIMENTO <span></span></div>
                                    <div style="height:50px">
                                        <div style="display:inline-block;width:90px ;padding-right:10px"><el-select @change="()=>{ if(!ChecarDataNascimento()){ $tools.Alert('<b>DATA DE NASCIMENTO</b> inválida'); } }" v-model="DiaNascimento" filterable placeholder="DIA" size="medium"><el-option v-for="item in $sdata.forms.days" :key="item.value" :label="item.label" :value="item.value" style="height:40px"></el-option></el-select></div>
                                        <div style="display:inline-block;width:140px;padding-right:10px"><el-select @change="()=>{ if(!ChecarDataNascimento()){ $tools.Alert('<b>DATA DE NASCIMENTO</b> inválida'); } }" v-model="MesNascimento" filterable placeholder="MÊS" size="medium"><el-option v-for="item in $sdata.forms.months" :key="item.value" :label="item.label" :value="item.value" style="height:40px"></el-option></el-select></div>
                                        <div style="display:inline-block;width:80px;"><el-select @change="()=>{ if(!ChecarDataNascimento()){ $tools.Alert('<b>DATA DE NASCIMENTO</b> inválida'); } }" v-model="AnoNascimento" filterable placeholder="ANO" size="medium"><el-option v-for="item in $sdata.forms.years" :key="item.value" :label="item.label" :value="item.value" style="height:40px"></el-option></el-select></div>
                                    </div>
                                </el-col>
                                <el-col :xs="24" :sm="12" :md="8" :lg="10" class="s-input" v-if="$root.usuario.tipoPessoa == 'PF'">
                                    <div>SEXO <span></span></div>

                                    <el-select filterable v-model="$root.usuario.sexo" class="m-4" placeholder="Selecionar" size="large" style="width:100%">
                                        <el-option v-for="item in opcoes.sexos"
                                                   :key="item.id"
                                                   :label="item.label"
                                                   :value="item.value"></el-option>
                                    </el-select>
                                </el-col>

                                <el-col :xs="24" :sm="12" :md="8" :lg="10" class="s-input">
                                    <div>
                                        <span></span><span></span>
                                        <div v-if="$root.usuario.tipoPessoa == 'PF'">CRECI</div><div v-else>CRECI PJ</div>
                                    </div>
                                    <el-input @keyup.enter="Send()" v-model="$root.usuario.creci" placeholder="" maxlength="22"></el-input>
                                </el-col>
                                <el-col :xs="24" :sm="12" :md="8" :lg="10" class="s-input">
                                    <div><p>CRECI - ESTADO</p><span></span></div>
                                    <div style="height:40px" v-if="carregandoEstadosCreci">
                                        <c-loading size="30px" style="padding-left:5px"></c-loading>
                                    </div>
                                    <!--<el-select v-else filterable v-model="$root.usuario.creciEstado" class="m-4" placeholder="Selecionar" size="large" style="width:100%" @change="(item)=>{ObterCidadesCreci(item);enableFilterButton = true;}">-->
                                    <el-select v-else filterable v-model="$root.usuario.creciEstado" class="m-4" placeholder="Selecionar" size="large" style="width:100%" @change="(item)=>{enableFilterButton = true;}">
                                        <el-option v-for="item in opcoes.estadosCreci"
                                                   :key="item.id"
                                                   :label="item.label"
                                                   :value="item.uf"></el-option>
                                    </el-select>
                                </el-col>
                                <!--<el-col :sm="12"  :md="6"  :lg="8" class="s-input">
                        <div><p>CRECI - CIDADE</p><span></span></div>
                        <div style="height:40px" v-if="carregandoCidadesCreci">
                            <c-loading size="30px" style="padding-left:5px"></c-loading>
                        </div>
                        <el-select v-else v-model="$root.usuario.creciCidade" filterable class="m-4" placeholder="Selecionar" size="large" style="width:100%" @click="()=>{ if($validator.not($root.usuario.creciEstado)){ $tools.Alert('Selecione um <b>Estado</b> antes');} }" @change="(item)=>{$root.usuario.creciCidade = item.label;enableFilterButton = true;}">
                                <el-option
                                    v-for="item in opcoes.cidadesCreci"
                                    :key="item.id"
                                    :label="item.label"
                                    :value="item"
                                ></el-option>
                        </el-select>
        </el-col>-->

                                <el-col :xs="24" :sm="12" :md="8" :lg="10" class="s-input">
                                    <div><p>CEP</p><span></span></div>
                                    <el-input v-model="cep.numero" placeholder="" ref="postalCode" v-maska data-maska="#####-###" @keyup="()=>{  if(cep.numero.length>=9){BuscarEndereco();} }">
                                        <template #append>
                                            <c-loading size="20px" v-if="carregandoCEP"></c-loading>
                                            <i class="fa fa-search" v-else-if="(cep.numero.length < 9)" style="color:var(--s-accent-color)" @click="$tools.Alert('Preencha todo o CEP para poder realizar a busca.')"></i>
                                            <i class="fa fa-search" v-else style="color:var(--s-accent-color);cursor:pointer" @click="BuscarEndereco"></i>
                                        </template>
                                    </el-input>
                                </el-col>

                                <el-col :xs="24" :sm="12" :md="8" :lg="10" class="s-input">
                                    <div><p>ESTADO</p><span></span></div>
                                    <div style="height:40px" v-if="carregandoEstados">
                                        <c-loading size="30px" style="padding-left:5px"></c-loading>
                                    </div>
                                    <el-select v-else filterable v-model="$root.usuario.estado" class="m-4" placeholder="Selecionar" size="large" style="width:100%" @change="(item)=>{ObterCidades(item);enableFilterButton = true;}">
                                        <el-option v-for="item in opcoes.estados"
                                                   :key="item.id"
                                                   :label="item.label"
                                                   :value="item.uf"></el-option>
                                    </el-select>
                                </el-col>
                                <el-col :xs="24" :sm="12" :md="8" :lg="10" class="s-input">
                                    <div><p>CIDADE</p><span></span></div>
                                    <div style="height:40px" v-if="carregandoCidades">
                                        <c-loading size="30px" style="padding-left:5px"></c-loading>
                                    </div>
                                    <el-select v-else v-model="$root.usuario.cidade" filterable class="m-4" placeholder="Selecionar" size="large" style="width:100%" @click="()=>{ if($validator.not($root.usuario.estado)){ $tools.Alert('Selecione um <b>Estado</b> antes');} }" @change="(item)=>{ObterBairros(item);enableFilterButton = true;}">
                                        <el-option v-for="item in opcoes.cidades"
                                                   :key="item.id"
                                                   :label="item.label"
                                                   :value="item.value"></el-option>
                                    </el-select>
                                </el-col>
                                <el-col :xs="24" :sm="12" :md="8" :lg="10" class="s-input">
                                    <div><p>BAIRRO</p><span></span></div>
                                    <div style="height:40px" v-if="carregandoBairros">
                                        <c-loading size="30px" style="padding-left:5px"></c-loading>
                                    </div>
                                    <el-select v-else v-model="$root.usuario.bairro" filterable :clearable="true" class="m-4" placeholder="Selecionar" size="large" style="width:100%;" @click="()=>{ if($validator.not($root.usuario.estado)){ $tools.Alert('Selecione <b>Estado</b> e <b>Cidade</b> antes');} }" @change="(item)=>{DefinirBairro(item);enableFilterButton = true;}">
                                        <el-option v-for="item in opcoes.bairros"
                                                   :key="item.id"
                                                   :label="item.label"
                                                   :value="item.value"></el-option>
                                    </el-select>
                                </el-col>
                                <el-col :xs="24" :sm="12" :md="8" :lg="10" class="s-input">
                                    <div>LOGRADOURO <span style="color:#808080">&nbsp;rua, avenida, praça, etc</span></div>
                                    <el-input @keyup.enter="Send()" v-model="$root.usuario.logradouro" placeholder="" maxlength="80" input-style="text-transform:uppercase;"></el-input>
                                </el-col>
                                <el-col :xs="24" :sm="12" :md="8" :lg="10" class="s-input">
                                    <div>NÚMERO <span style="color:#808080">&nbsp;informe <b>SN</b> se não houver</span></div>
                                    <el-input @keyup.enter="Send()" v-model="$root.usuario.numero" placeholder="" maxlength="80" input-style="text-transform:uppercase;" ref="addressnumber"></el-input>
                                </el-col>

                                <el-col :xs="24" :sm="12" :md="8" :lg="10" class="s-input">
                                    <div>COMPLEMENTO <span> opcional</span></div>
                                    <el-input @keyup.enter="Send()" v-model="$root.usuario.complemento" placeholder="" maxlength="80" input-style="text-transform:uppercase;"></el-input>
                                </el-col>

                                <el-col :xs="24" :sm="12" :md="8" :lg="10" class="s-input" v-if="$root.usuario.idTipo != 2">
                                    <div>SENHA <span style="color:#808080">&nbsp;pelo menos 4 caracteres</span></div>
                                    <el-input @keyup.enter="Send()" v-model="$root.usuario.senha" type="password" placeholder="" maxlength="20" show-password></el-input>
                                </el-col>
                                <el-col :xs="24" :sm="12" :md="8" :lg="10" class="s-input" v-if="$root.usuario.idTipo != 2">
                                    <div>CONFIRMAR SENHA <span style="color:#808080">&nbsp;repetir senha</span></div>
                                    <el-input @keyup.enter="Send()" v-model="senhaConfirma" type="password" placeholder="" maxlength="20" show-password></el-input>
                                </el-col>
                            </el-row>



                            <el-row :gutter="20">
                                <el-col :md="24" style="margin:10px">
                                    <div>
                                        <el-checkbox v-model="$root.usuario.aceitouTermos">aceito os termos e condições de uso <a href="files/JaCaptei_Termos_de_Uso.pdf" target="_blank" style="font-weight:800;color:var(--s-accent-color)"> <i class="fa fa-up-right-from-square" style="padding-left:10px;padding-right:4px;font-size:14px;color:var(--s-accent-color)"></i> ver termos</a></el-checkbox>
                                        <br />
                                        <el-checkbox v-model="$root.usuario.aceitouPoliticaPrivacidade">aceito a política de privacidade dos dados <a href="files/JaCaptei_Politica_Privacidade.pdf" target="_blank" style="font-weight:800;color:var(--s-accent-color)"> <i class="fa fa-up-right-from-square" style="padding-left:10px;padding-right:4px;font-size:14px;color:var(--s-accent-color)"></i> ver política</a></el-checkbox>
                                    </div>
                                </el-col>
                            </el-row>



                            <el-row :gutter="20">
                                <el-col :md="24" style="margin-top:0px">
                                    <q-btn label="Enviar" color="secondary" @click="Send()" style="width:100%;height:40px"></q-btn>
                                </el-col>
                            </el-row>


                            <el-row :gutter="20" style="margin-top:20px">
                                <el-col :md="12">
                                    Já tem cadastro? faça o   <el-button type="primary" link @click="$root.Login()">LOGIN</el-button>
                                </el-col>
                                <el-col :md="12" style="text-align:end;padding-right:10px">
                                    Exceto <i>Complemento</i>, todos os campos são necessários.
                                </el-col>
                            </el-row>


                        </el-col>

                        </div>


                </div>



                <div v-else-if="view=='sending'" style="min-height:374px">
                    <br /><br />
                    <div class="title" style="color:#fff"><b>Enviando</b></div>
                    <br /><br />
                    <c-loading size="3em" color="#fff"></c-loading>
                </div>

                <div v-else-if="view=='alert'">
                    <br /><br />
                    <div class="title" style="color:var(--s-color-yellow)"><b><i class="fa-solid fa-triangle-exclamation"></i> Atenção</b></div>
                    <br /><br />
                    <br /><span v-html="messageAlert"></span>
                    <br /><br />
                    <q-btn color="white" text-color="indigo-10" label="VOLTAR" @click="ShowView(viewLast)" style="width:160px;" id="btn_voltar_5"></q-btn>
                </div>

                <div v-else-if="view=='success'" style="min-height:374px">
                    <div>
                        <br />
                        <br />
                        <div class="title" style="color:#fff"><b><i class="fa fa-circle-check" style="color:#fff"></i> Sucesso</b></div>
                        <br />
                        <span style="font-size:17px;color:#fff"><b>Cadastro efetuado!</b></span>
                        <br />
                        <br />
                        <div v-if="$root.usuario.idTipo == 1">
                            <span style="font-size:17px;color:#fff;font-weight:700;padding:10px">Lhe enviamos um e-mail com um link para você <b>CONFIRMAR O CADASTRO.</b><br />E-mail enviado por <b>site@jacaptei.com.br</b>, verifique a caixa de SPAM se não receber.</span>
                            <br />
                            <br />
                            <q-btn label="Ok" color="secondary" style="font-size:18px;width:50%;height:50px;border-radius:20px" @click="ShowView('form')"></q-btn>
                        </div>
                        <div v-else-if="$root.usuario.idTipo == 2">
                            <div style="font-size:17px;color:#fff;font-weight:700;padding:10px">Agora é só entrar em contato para vender seu imóvel</div>
                            <div style="background-color:#fff;color:var(--s-accent-color);font-weight:700;padding:10px">
                                <q-btn color="green-7" style="font-size:20px;min-width:320px;width:50%;height:30px;border-radius:20px" @click="VenderAgora()">
                                    <i class="fab fa-whatsapp" style="font-size:26px;margin-right:10px;font-weight:500"></i>	VENDER AGORA  (31) 4003-9998
                                </q-btn>
                            </div>
                            <br />
                            <br />
                            <q-btn label="voltar" color="secondary" style="font-size:18px;width:240px;height:50px;border-radius:20px" @click="ShowView('form')"></q-btn>
                        </div>
                        <div v-else>
                            <br />
                            <br />
                            <q-btn label="Ok" color="secondary" style="font-size:18px;width:50%;height:50px;border-radius:20px" @click="ShowView('form')"></q-btn>
                        </div>
                    </div>
                </div>

                <div v-else-if="view=='fail'">
                    <div class="title" style="color:var(--s-color-red)"><b><i class="fa fa-circle-xmark"></i> Falhou</b></div>
                    <br /><br />
                    <br /><span v-html="messageFail"></span>
                    <br /><br />
                    <q-btn color="white" text-color="indigo-10" label="VOLTAR" @click="ShowView(viewLast)" style="width:160px;" id="btn_voltar_5"></q-btn>
                </div>





            </div>
        </div>

    </div>




</template>

<script>
    module.exports = {
        components: {

        },

        data: function () {
            return {
                onRequest: false,
                view: "form",
                viewLast: "form",
                messageSuccess: "Cadastrado!",
                messageAlert: "",
                contaNova:true,
                messageFail: "Não foi possível autenticar, favor tentar novamente.",
                content: "",
                DiaNascimento: 0,
                MesNascimento: 0,
                AnoNascimento: 0,
                senhaConfirma: "",
                carregandoCEP: false,
                carregandoEstados: false,
                carregandoCidades: false,
                carregandoBairros: false,
                carregandoEstadosCreci: false,
                carregandoCidadesCreci: false,
                estadoSelecionado:{},
                cidadeSelecionada:{},
                bairroSelecionado:{},
                cep: {
                    numero: "",
                    estado: "",
                    cidade: "",
                    logradouro: ""
                },
                opcoes: {
                    cidades: [],
                    estados:        this.$root.localidade.estados,
                    estadosCreci:   this.$root.localidade.estados,
                    //estados:        this.$root.localidade.estados,
                    //estadosCreci:   this.$root.localidade.estados,
                    cidadesCreci: [],
                    bairros: [],
                    sexos: [{ id: 1, label: "NÃO APLICÁVEL", value: "NA" }, { id: 2, label: "MASCULINO", value: "MASCULINO" }, { id: 3, label: "FEMININO", value: "FEMININO" }],
                }
            }
        }, computed: {

        },

        props: { },
        watch: {
        },
        created: function () {
            //this.opcoes.estados = this.$sdata.forms.states;
        },
        mounted() {
            var count = 0;
            this.$root.usuario.idTipo = parseInt(this.idtipo);
            this.$root.usuario.tipo = this.tipo;
            //c2("idTipo",this.$root.usuario.idTipo)
            //c2("tipo",this.$root.usuario.tipo)
            window.setTimeout(() => { this.$root.usuario.idPlano = 2 } , 1000);
            
        },
        methods: {


            MudarTipoPessoa() {

                if(this.$root.usuario.tipoPessoa == "PF")
                    this.$root.usuario.cnpj="";
                else
                    this.$root.usuario.cpf="";

                window.setTimeout(() => this.$refs.documento.focus(), 300);

            },


            MudarConta() {
                this.$root.usuario.tokenConta="";
                if(!this.contaNova)
                    window.setTimeout(() => this.$refs.token.focus(), 300);
            },





            CheckDoc() {

                //if (this.$root.usuario.tipoPessoa == "PF") {
                //    if (this.$validator.not(this.$root.usuario.cpf))
                //        this.$tools.Alert("CPF não informado");
                //    else if (!this.$validator.IsCPF(this.$root.usuario.cpf))
                //        this.$tools.Alert("CPF inválido");
                //}
                //else {
                //    if (this.$validator.not(this.$root.usuario.cnpj))
                //        this.$tools.Alert("CNPJ não informado");
                //    else if (!this.$validator.IsCNPJ(this.$root.usuario.cnpj))
                //        this.$tools.Alert("CNPJ inválido");
                //}

                window.setTimeout(() => {

                        if (this.$root.usuario.tipoPessoa == "PF") {
                            if (this.$validator.is(this.$root.usuario.cpf) && !this.$validator.IsCPF(this.$root.usuario.cpf))
                                this.$tools.Alert("CPF inválido");
                        }
                        else {
                            if (this.$validator.is(this.$root.usuario.cnpj) && !this.$validator.IsCNPJ(this.$root.usuario.cnpj))
                                this.$tools.Alert("CNPJ inválido");
                        }
                },500);


            },
            async BuscarEndereco() {

                if (this.cep.numero !== this.$root.usuario.cep) {

                    this.carregandoCEP      = true;
                    this.carregandoEstados  = true;
                    this.carregandoCidades  = true;
                    this.carregandoBairros  = true;

                    this.cep.cidade         = this.$root.usuario.cidade     = "";
                    this.cep.logradouro     = this.$root.usuario.logradouro = "";
                    this.cep.bairro         = this.$root.usuario.bairro     = "";
                    this.cep.estado         = this.$root.usuario.estado     = "";

                    this.$root.usuario.cep  = this.cep.numero;
                    let res                 = await this.$sdata.SearchAddress(this.cep.numero);

                    if (this.$validator.is(res?.city)) {
                        this.cep.cidade         = this.$root.usuario.cidade     = res.city;
                        this.cep.logradouro     = this.$root.usuario.logradouro = res.address;
                        this.cep.bairro         = this.$root.usuario.bairro     = res.neighborhood;
                        this.cep.estado         = this.$root.usuario.estado     = res.state;

                        //this.estadoSelecionado  = this.opcoes.estados.filter((e)=> e.value == res.state)[0];
                        //this.cidadeSelecionada  = this.opcoes.estados.filter((e)=> e.value == res.state)[0];
                        //c2("this.opcoes.estados ", this.opcoes.estados)
                        //c2("this.estadoSelecionado ", this.estadoSelecionado)
                        //addressReference = res.addressReference;
                        this.$refs.addressnumber.focus();
                        //c2("cep",this.cep)
                    }

                    this.carregandoCEP      = false;
                    this.carregandoEstados  = false;
                    this.carregandoCidades  = false;
                    this.carregandoBairros  = false;
                }
            },




            ObterCidades(estado) {

                this.$root.usuario.cidade   =   this.$root.usuario.bairro   = "";
                this.cidadeSelecionada      =   this.bairroSelecionado      = {};

                this.carregandoCidades = true;
                this.opcoes.bairros = [];
                this.opcoes.cidades = [];
                var cidades = [];

                c2("estado",estado)
                if (this.$validator.is(estado)) {

                    var idEstado = this.opcoes.estados.filter((e) => e.uf == estado)[0].id;
                    var url = this.$api.BuildURL("suporte/cidades/obter") + "/" + idEstado;

                    axios.get(url).then((request) => {
                        if (request.data) {
                                request.data.result.forEach((item, index) => {
                                    cidades.push({ id: item.id, value: item.nome, label: item.label });
                                });
                                this.opcoes.cidades = cidades;
                        }
                    }).catch((error) => {
                        ce(error);
                        if (error.response)
                            ce(error.response);
                        ce("Não foi possível obter cidades.");
                    }).finally(() => {
                        this.carregandoCidades = false;
                    });

                } else
                    this.carregandoCidades = false;
            },


            ObterBairros(cidade) {

                var idCidade = this.opcoes.cidades.filter((c)=>c.value == cidade)[0].id;

                this.$root.usuario.bairro   = "";
                this.bairroSelecionado      = {};

                //this.$root.usuario.cidade = cidade.label;
                
                this.carregandoBairros = true;
                this.opcoes.bairros = [];
                var bairros = [];

                if (this.$validator.is(idCidade)) {

                    var url = this.$api.BuildURL("suporte/bairros/obter") + "/" + idCidade;

                    axios.get(url).then((request) => {
                        if (request.data) {
                            request.data.result.forEach((item, index) => {
                                bairros.push({ id: item.id, value: item.nome, label: item.label });
                            });
                            this.opcoes.bairros = bairros;
                        }
                    }).catch((error) => {
                        ce(error);
                        if (error.response)
                            ce(error.response);
                        ce("Não foi possível obter bairros.");
                    }).finally(() => {
                        this.carregandoBairros = false;
                    });

                } else
                    this.carregandoBairros = false;
            },

            DefinirBairro(bairro) {
                //this.$root.usuario.bairro = bairro.label;
                //c2("this.$root.usuario", this.$root.usuario)
            },




            ChecarDataNascimento() {
                var res = false;
                if (this.DiaNascimento > 0 && this.MesNascimento > 0) {
                    let dt = this.$tools.FormatDateArgs(((this.AnoNascimento == 0) ? "1900" : this.AnoNascimento), this.MesNascimento, this.DiaNascimento);
                    //let dt = this.$tools.FormatDateArgs(this.AnoNascimento,this.MesNascimento,this.DiaNascimento);
                    res = this.$validator.IsDate(dt);
                } else
                    res = true;
                return res;
            },




            ShowView(v) {
                this.view = v;
            },


            Send() {

                this.$root.usuario.idTipo = 5;

                var msg = "";

                //if (this.$validator.not(this.$root.usuario.tipo) || this.$root.usuario.idTipo == 0)
                //    msg += "<b>TIPO</b> de usuário não identificado<br>";

                if (this.$root.usuario.tipoPessoa == "PF") {
                    if (this.$validator.not(this.$root.usuario.cpf))
                        msg += "<b>CPF</b> não informado<br>";
                    else if (!this.$validator.IsCPF(this.$root.usuario.cpf))
                        msg += "<b>CPF</b> inválido<br>";
                    if (this.$validator.not(this.$root.usuario.nome))
                        msg += "<b>NOME</b> não informado<br>";
                }
                else {
                    if (this.$validator.not(this.$root.usuario.cnpj))
                        msg += "<b>CNPJ</b> não informado<br>";
                    else if (!this.$validator.IsCNPJ(this.$root.usuario.cnpj))
                        msg += "<b>CNPJ</b> inválido<br>";
                    if (this.$validator.not(this.$root.usuario.razao))
                        msg += "<b>RAZÃO SOCIAL</b> não informada<br>";
                    if (this.$validator.not(this.$root.usuario.nome))
                        msg += "<b>NOME FANTASIA</b> não informado<br>";
                    if (this.$validator.not(this.$root.usuario.responsavel))
                        msg += "<b>NOME DO RESPONSÁVEL</b> não informado<br>";
                }



                if (this.$validator.not(this.$root.usuario.email))
                    msg += "<b>E-MAIL</b> não informado<br>";
                else if (!this.$validator.IsEmail(this.$root.usuario.email))
                    msg += "<b>E-MAIL</b> inválido<br>";

                if (this.$validator.not(this.$root.usuario.telefone))
                    msg += "<b>TELEFONE</b> não informado<br>";
                else if (this.$root.usuario.telefone.length < 14)
                    msg += "<b>TELEFONE</b> inválido<br>";

                if (this.$root.usuario.tipoPessoa == "PF") {
                    if (this.AnoNascimento == 0 && this.MesNascimento == 0 && this.DiaNascimento == 0)
                        msg += "<b>DATA DE NASCIMENTO</b> não informada<br>";
                    else if (this.AnoNascimento == 0 || this.MesNascimento == 0 || this.DiaNascimento == 0)
                        msg += "<b>DATA DE NASCIMENTO</b> incompleta<br>";
                    else if (!this.ChecarDataNascimento())
                        msg += "<b>DATA DE NASCIMENTO</b> inválida<br>";
                }

                if (this.$validator.not(this.$root.usuario.creci)) {
                    msg += "<b>CRECI</b> não informado<br>";
                } else if (this.$root.usuario.creci.length < 4)
                    msg += "<b>CRECI</b> inválido<br>";
                else {
                    if (this.$validator.not(this.$root.usuario.creciEstado))
                        msg += "<b>CRECI - ESTADO</b> não selecionado<br>";
                    //if(this.$validator.not(this.$root.usuario.creciCidade))
                    //	msg += "<b>CRECI - CIDADE</b> não selecionada<br>";
                }

                if (this.$validator.not(this.$root.usuario.estado))
                    msg += "<b>ESTADO</b> não selecionado<br>";

                if (this.$validator.not(this.$root.usuario.cidade))
                    msg += "<b>CIDADE</b> não selecionada<br>";

                if (this.$validator.not(this.$root.usuario.bairro))
                    msg += "<b>BAIRRO</b> não selecionado<br>";

                if (this.$validator.not(this.$root.usuario.logradouro))
                    msg += "<b>LOGRADOURO</b> não informado<br>";

                if (this.$validator.not(this.$root.usuario.numero))
                    msg += "<b>NÚMERO</b> não informado (informe <b>SN</b> se não houver)<br>";

                //if(this.$root.usuario.idTipo == 1){
                if (this.$validator.not(this.$root.usuario.senha))
                    msg += "<b>SENHA</b> não informada<br>";
                else if (this.$root.usuario.senha.length < 4)
                    msg += "<b>SENHA</b> precisa ter pelo menos 4 caracteres<br>";
                if (this.$validator.not(this.senhaConfirma))
                    msg += "<b>CONFIRMAR SENHA</b> não informada<br>";
                else if (this.$root.usuario.senha != this.senhaConfirma)
                    msg += "<b>SENHA e CONFIRMAR SENHA</b> não combinam<br>";
                //}





                if (!this.$root.usuario.aceitouTermos)
                    msg += "<b>TERMOS DE USO</b> não aceito<br>";

                if (!this.$root.usuario.aceitouPoliticaPrivacidade)
                    msg += "<b>POLÍTICA DE PRIVACIDADE</b> não aceita<br>";


                if (msg.length > 0) {
                    this.$tools.Alert(msg);
                } else {

                    this.$root.usuario.AnoNascimento = this.AnoNascimento;
                    this.$root.usuario.MesNascimento = this.MesNascimento;
                    this.$root.usuario.DiaNascimento = this.DiaNascimento;

                    this.$root.usuario.tipo = this.tipo;
                    this.$tools.ScrollTo("form-area");
                    this.ShowView('sending');
                    //window.setTimeout(()=>this.ShowView('success'),1000);
                    //c2("this.$root.usuario",this.$root.usuario)

                    axios.post(this.$api.BuildURL("parceiro/inserir"), this.$root.usuario).then((request) => {
                        //c(request)
                        if (request.data.status.success) {
                            this.ShowView("success");
                        } else {
                            this.ShowView("form");
                            this.$tools.AlertNotes(request.data);
                        }
                    }).catch((error) => {
                        this.ShowView("form");
                        c2("error.response.data", error.response.data)
                        if (error.response) {
                            this.$tools.AlertNotes(error.response.data);
                        } else
                            this.$tools.Alert("Não foi possível atender a requisição");
                        //c(error.response.status);
                        //c(error.response.headers); 								//ce(error);
                        //this.ShowView("form");
                    }).finally(() => {

                    });

                    //axios.post(this.$api.BuildURL("InserirUsuario"),this.$root.usuario).then((request) => {
                    //		//c(request)
                    //		if(request.data.success){
                    //			this.ShowView("success");
                    //		}else{
                    //			this.ShowView("form");
                    //			this.$tools.Alert(request.data.messages);
                    //		}
                    //	}).catch((error) => {
                    //		ce(error);
                    //		this.ShowView("form");
                    //		this.$tools.Alert("Não foi possível atender a requisição");
                    //	}).finally(() => {

                    //	});






                }
            },











        }

    }

</script>


<style scoped>
    .s-input {
        margin: 20px;
        margin-bottom: 0px;
        height: 70px;
    }
</style>


