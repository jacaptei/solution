<template>

    <!--<el-affix :offset="offset" style="position:absolute">
        <el-button type="primary">Offset top 120px</el-button>
    </el-affix>-->

    <el-aside id="side-search" :style="showForm? 'width:320px':'width:0px'">


        <div style="font-weight:800;z-index:100">
            <div v-if="showForm">
                <div style="float:left;padding:10px;padding-left:20px;color:var(--s-alt-color)">Filtrar Resultados</div>
                <div class="link-collapser" style="float:right;color:var(--s-accent-color);padding:10px;cursor:pointer" v-if="showForm" @click="ToggleShowForm"><i class="fa fa-chevron-left " />     </div>
            </div>
            <div v-else style="height:40px;position:fixed;z-index:1000">
                <q-btn color="primary" icon="fa fa-filter" label="Filtrar" @click="ToggleShowForm" style="height:30px;"></q-btn>
            </div>
        </div>

        <div v-if="showForm" class="search-wrapper" @click="enableFilterButton = true">
            <div>
                <div style="z-index:-100;margin-top:30px;">
                    <!--<q-btn  color="primary" text-color="white" label="Venda"   style="width:49%" @click="()=>{$tools.Alert('Somente vendas disponíveis no momento');}" ></q-btn>
                    <q-btn  color="white" text-color="primary" label="Aluguel" style="width:49%" @click="()=>{$tools.Alert('Somente vendas disponíveis no momento');}" ></q-btn>-->
                </div>
                <div class="search-form">

                    <el-row :gutter="20">
                        <el-col :md="24">
                            <div><p>Código</p><span></span></div>
                            <el-input input-style="color:var(--s-accent-color)" @keyup.enter="Buscar()" v-model="$root.buscaImovel.imovel.cod" placeholder="qualquer" maxlength="20"></el-input>
                        </el-col>
                    </el-row>

                    <el-row :gutter="20">
                        <el-col :md="24">
                            <div><p>Estado</p><span></span></div>
                             <el-select v-else filterable v-model="buscaImovel.imovel.endereco.estado" class="m-4" placeholder="qualquer" size="large" style="width:100%" @change="(item)=>{ObterCidades(item);enableFilterButton = true;}">
                                <el-option v-for="item in opcoes.estados"
                                            :key="item.id"
                                            :label="item.label"
                                            :value="item.value">
                                </el-option>
                            </el-select>
                        </el-col>
                    </el-row>

                    <el-row :gutter="20">
                        <el-col :md="24">
                            <div><p>Cidade</p><span></span></div>
                            <div style="height:40px" v-if="carregandoCidades">
                                <c-loading size="30px" style="padding-left:5px"></c-loading>
                            </div>
                            <div v-else-if="opcoes.cidades.length==0">
                                <span style="color:#7d7d7d;padding-left:10px">selecione um estado</span>
                            </div>
                            <el-select v-else v-model="$root.buscaImovel.imovel.endereco.cidade" filterable class="m-4" placeholder="qualquer" size="large" style="width:100%" @click="()=>{ if($validator.not($root.buscaImovel.imovel.endereco.estado)){ $tools.Alert('Selecione um <b>Estado</b> antes');} }" @change="(item)=>{ObterBairros(item);enableFilterButton = true;}">
                                <el-option v-for="item in opcoes.cidades"
                                            :key="item.id"
                                            :label="item.label"
                                            :value="item.value">
                                </el-option>
                            </el-select>
                        </el-col>
                    </el-row>

                    <el-row :gutter="20">
                        <el-col :md="24">
                            <div><p v-if="$root.buscaImovel.bairros.length <= 1">Bairro</p><p v-else>Bairros</p><span></span></div>
                            <div style="height:40px" v-if="carregandoBairros">
                                <c-loading size="30px" style="padding-left:5px"></c-loading>
                            </div>
                            <div v-else-if="opcoes.bairros.length==0">
                                <span style="color:#7d7d7d;padding-left:10px">selecione um estado</span>
                            </div>
                            <el-select v-else v-model="$root.buscaImovel.bairros" multiple filterable :clearable="true" class="m-4" placeholder="qualquer" size="large" style="width:100%">
                                <el-option v-for="item in opcoes.bairros"
                                            :key="item.id"
                                            :label="item.label"
                                            :value="item">
                                </el-option>
                            </el-select>
                        </el-col>
                    </el-row>

                    <el-row :gutter="20">
                        <el-col :md="24">
                            <div><p>Tipo de imóvel</p><span></span></div>
                            <el-select v-model="$root.buscaImovel.imovel.tipo" filterable class="m-4" placeholder="qualquer" size="large" style="width:100%" @change="enableFilterButton = true">
                                <el-option v-for="item in opcoes.tiposImoveis"
                                           :key="item.id"
                                           :label="item.label"
                                           :value="item"></el-option>
                            </el-select>
                        </el-col>
                    </el-row>

                    <el-row :gutter="20">
                        <el-col :md="12" :sm="12" :xs="12">
                            <p>Valor Mínimo R$</p>
                            <!--<el-input input-style="color:var(--s-accent-color)" @blur="CheckValues" @keyup.enter="Buscar()" v-model="valorMinimo" placeholder="qualquer" maxlength="20"    :formatter="(value) => `R$ ${value}`.replace(/\B(?=(\d{3})+(?!\d))/g, '.')"    :parser="(value) => value.replace(/\R\$\s?|(\.*)/g, '').replace(/[a-zA-Z]/g, '')"></el-input>-->
                            <el-input input-style="color:var(--s-accent-color)" @keyup.enter="Buscar()" v-model="valorMinimo" placeholder="qualquer" maxlength="20" :formatter="(value) => `R$ ${value}`.replace(/\B(?=(\d{3})+(?!\d))/g, '.')" :parser="(value) => value.replace(/\R\$\s?|(\.*)/g, '').replace(/[a-zA-Z]/g, '')"></el-input>
                        </el-col>
                        <el-col :md="12" :sm="12" :xs="12">
                            <p>Valor Máximo R$</p>
                            <el-input input-style="color:var(--s-accent-color)" @keyup.enter="Buscar()" v-model="valorMaximo" placeholder="qualquer" maxlength="20" :formatter="(value) => `R$ ${value}`.replace(/\B(?=(\d{3})+(?!\d))/g, '.')" :parser="(value) => value.replace(/\R\$\s?|(\.*)/g, '').replace(/[a-zA-Z]/g, '')"></el-input>
                        </el-col>
                    </el-row>


                    <el-row :gutter="20">
                        <el-col :md="12" :sm="12" :xs="12">
                            <p>Área Mínima M²</p>
                            <el-input input-style="color:var(--s-accent-color)" @keyup.enter="Buscar()" v-model="areaMinima" placeholder="qualquer" maxlength="20" :formatter="(value) => `${value}`.replace(/\B(?=(\d{3})+(?!\d))/g, '.')" :parser="(value) => value.replace(/(\.*)/g, '').replace(/[a-zA-Z]/g, '')"></el-input>
                        </el-col>
                        <el-col :md="12" :sm="12" :xs="12">
                            <p>Área Máxima M²</p>
                            <el-input input-style="color:var(--s-accent-color)" @keyup.enter="Buscar()" v-model="areaMaxima" placeholder="qualquer" maxlength="20" :formatter="(value) => `${value}`.replace(/\B(?=(\d{3})+(?!\d))/g, '.')" :parser="(value) => value.replace(/(\.*)/g, '').replace(/[a-zA-Z]/g, '')"></el-input>
                        </el-col>
                    </el-row>




                    <el-row :gutter="20">
                        <el-col :md="12" :sm="12" :xs="12">
                            <p>Quartos</p>
                            <el-select v-model="quartos" filterable class="m-4" placeholder="qualquer" size="large" input-style="color:var(--s-accent-color)" :teleported="false" @change="enableFilterButton = true">
                                <el-option v-for="item in opcoes.quantidades" :key="item.id" :label="item.label + item.complement.replace('ou','')" :value="item.value">
                                    <span :style="(item.id > 0)? 'font-weight:bold;margin-right:6px':''">{{ item.label }}</span>
                                    <span style="font-size:12px">{{ item.complement }}</span>
                                </el-option>
                            </el-select>
                        </el-col>
                        <el-col :md="12" :sm="12" :xs="12">
                            <p>Vagas</p>
                            <el-select v-model="vagas" filterable class="m-4" placeholder="qualquer" size="large" input-style="color:var(--s-accent-color)" :teleported="false" @change="enableFilterButton = true">
                                <el-option v-for="item in opcoes.quantidades" :key="item.id" :label="item.label + item.complement.replace('ou','')" :value="item.value">
                                    <span :style="(item.id > 0)? 'font-weight:bold;margin-right:6px':''">{{ item.label }}</span>
                                    <span style="font-size:12px">{{ item.complement }}</span>
                                </el-option>
                            </el-select>
                        </el-col>
                    </el-row>


                    <el-row :gutter="20">
                        <el-col :md="12" :sm="12" :xs="12">
                            <p>Banheiros</p>
                            <el-select v-model="banheiros" filterable class="m-4" placeholder="qualquer" size="large" input-style="color:var(--s-accent-color)" :teleported="false" @change="enableFilterButton = true">
                                <el-option v-for="item in opcoes.quantidades" :key="item.id" :label="item.label + item.complement.replace('ou','')" :value="item.value">
                                    <span :style="(item.id > 0)? 'font-weight:bold;margin-right:6px':''">{{ item.label }}</span>
                                    <span style="font-size:12px">{{ item.complement }}</span>
                                </el-option>
                            </el-select>
                        </el-col>
                        <el-col :md="12" :sm="12" :xs="12">
                            <p>Suítes</p>
                            <el-select v-model="suites" filterable class="m-4" placeholder="qualquer" size="large" input-style="color:var(--s-accent-color)" :teleported="false" @change="enableFilterButton = true">
                                <el-option v-for="item in opcoes.quantidades" :key="item.id" :label="item.label + item.complement.replace('ou','')" :value="item.value">
                                    <span :style="(item.id > 0)? 'font-weight:bold;margin-right:6px':''">{{ item.label }}</span>
                                    <span style="font-size:12px">{{ item.complement }}</span>
                                </el-option>
                            </el-select>
                        </el-col>
                    </el-row>

                    <el-row :gutter="20">
                        <el-col :md="24" style="margin-top:5px;margin-bottom:10px">
                            <p>Características</p>
                        </el-col>
                        <el-col :md="12" :sm="12" :xs="12">
                            <el-col :md="4" :sm="8" :xs="12"><el-checkbox label="Água individual     " v-model="$root.buscaImovel.imovel.interno.aguaIndividual    " size="large"></el-checkbox></el-col>
                            <el-col :md="4" :sm="8" :xs="12"><el-checkbox label="Área servico        " v-model="$root.buscaImovel.imovel.interno.areaServico       " size="large"></el-checkbox></el-col>
                            <el-col :md="4" :sm="8" :xs="12"><el-checkbox label="Armário cozinha     " v-model="$root.buscaImovel.imovel.interno.armarioCozinha    " size="large"></el-checkbox></el-col>
                            <el-col :md="4" :sm="8" :xs="12"><el-checkbox label="Armário quarto      " v-model="$root.buscaImovel.imovel.interno.armarioQuarto     " size="large"></el-checkbox></el-col>
                            <el-col :md="4" :sm="8" :xs="12"><el-checkbox label="Banheiro            " v-model="$root.buscaImovel.imovel.interno.banheiro          " size="large"></el-checkbox></el-col>
                            <el-col :md="4" :sm="8" :xs="12"><el-checkbox label="Box despejo         " v-model="$root.buscaImovel.imovel.interno.boxDespejo        " size="large"></el-checkbox></el-col>
                            <el-col :md="4" :sm="8" :xs="12"><el-checkbox label="Churrasqueira       " v-model="$root.buscaImovel.imovel.interno.churrasqueira     " size="large"></el-checkbox></el-col>
                            <el-col :md="4" :sm="8" :xs="12"><el-checkbox label="Dce                 " v-model="$root.buscaImovel.imovel.interno.dce               " size="large"></el-checkbox></el-col>
                            <el-col :md="4" :sm="8" :xs="12"><el-checkbox label="Gás canalizado      " v-model="$root.buscaImovel.imovel.interno.gasCanalizado     " size="large"></el-checkbox></el-col>
                            <el-col :md="4" :sm="8" :xs="12"><el-checkbox label="Sala                " v-model="$root.buscaImovel.imovel.interno.sala              " size="large"></el-checkbox></el-col>
                        </el-col>
                        <el-col :md="12" :sm="12" :xs="12">
                            <el-col :md="4" :sm="8" :xs="12"><el-checkbox label="Lavabo              " v-model="$root.buscaImovel.imovel.interno.lavabo            " size="large"></el-checkbox></el-col>
                            <el-col :md="4" :sm="8" :xs="12"><el-checkbox label="Alarme              " v-model="$root.buscaImovel.imovel.externo.alarme            " size="large"></el-checkbox></el-col>
                            <el-col :md="4" :sm="8" :xs="12"><el-checkbox label="Cerca elétrica      " v-model="$root.buscaImovel.imovel.externo.cercaEletrica     " size="large"></el-checkbox></el-col>
                            <el-col :md="4" :sm="8" :xs="12"><el-checkbox label="Elevador            " v-model="$root.buscaImovel.imovel.externo.elevador          " size="large"></el-checkbox></el-col>
                            <el-col :md="4" :sm="8" :xs="12"><el-checkbox label="Portão eletrônico   " v-model="$root.buscaImovel.imovel.externo.portaoEletronico  " size="large"></el-checkbox></el-col>
                            <el-col :md="4" :sm="8" :xs="12"><el-checkbox label="Hidromassagem       " v-model="$root.buscaImovel.imovel.lazer.hidromassagem       " size="large"></el-checkbox></el-col>
                            <el-col :md="4" :sm="8" :xs="12"><el-checkbox label="Piscina             " v-model="$root.buscaImovel.imovel.lazer.piscina             " size="large"></el-checkbox></el-col>
                            <el-col :md="4" :sm="8" :xs="12"><el-checkbox label="Quadra poliesportiva" v-model="$root.buscaImovel.imovel.lazer.quadraPoliesportiva " size="large"></el-checkbox></el-col>
                            <el-col :md="4" :sm="8" :xs="12"><el-checkbox label="Salão de festas     " v-model="$root.buscaImovel.imovel.lazer.salaoFestas         " size="large"></el-checkbox></el-col>
                        </el-col>
                    </el-row>




                </div>
                <el-row :gutter="20" class="search-form">
                    <el-col :md="24" style="margin-top:-20px">
                        <!--<q-btn flat color="grey" icon="fa fa-cancel" label="limpar filtro"  @click="ClearFilter" style="width:160px"></q-btn>--><br />
                        <q-btn label="Aplicar filtro" color="primary" style="width:100%;height:40px" @click="Buscar"></q-btn>
                        <q-btn label="Limpar filtro" color="secondary" style="width:100%;height:40px;margin-top:10px" @click="ClearFilter"></q-btn>
                    </el-col>
                </el-row>
            </div>

            <el-affix position="bottom" :offset="60" :style="showForm? 'width:280px':'width:0px'">
                <q-btn label="Aplicar filtro" color="primary" style="width:100%;height:40px" @click="Buscar"></q-btn>
            </el-affix>

        </div>

    </el-aside>

</template>

<script>
    module.exports = {

        components: {

        },

        data: function () {
            return {
                language: "PT-BR",
                labels: [],
                isMobile: window.screen.width < 1000,
                showForm: window.screen.width > 1000,
                offset: window.screen.height - 200,
                model: "Aluguel",
                isValidValues: true,
                enableFilterButton: false,
                currencyMask: {},

                tipoImovel: "",
                tipoOperacao: "",
                estado: "",
                cidade: "",
                bairro: "",

                valorMinimo: "",
                valorMaximo: "",

                areaMinima: "",
                areaMaxima: "",

                quartos: "",
                vagas: "",
                banheiros: "",
                suites: "",

                carregandoCEP       : false,
                carregandoEstados   : false,
                carregandoCidades   : false,
                carregandoBairros   : false,

                opcoes: { estados: [], cidades: [], bairros: [],
                    sexos: [],
                    anos:[],
                    quantidades:[],
                    tiposImoveis:this.$models.tiposImoveis(),
                    tiposComplementos:this.$models.tiposComplementos()
                },



            }
        }, computed: {

        },

        props: {
            show: { type: Boolean, required: false, default: (window.screen.width > 1000) },
        },
        watch: {
        },
        created: function () {

            this.$sdata.ObterEstados().then(res => { this.opcoes.estados = res; });
            for(var i=0;i<=20;i++){
                var item = {id:i,label:(i==0)? "qualquer" : (i < 10? "0"+i : i),complement: (i == 0? "" : "ou +"),value:(i==0)? null : i};
                this.opcoes.quantidades.push(item);
            }

            if (this.$validator.is(this.$root.buscaImovel.valorMaximo) && this.$root.buscaImovel.valorMaximo > 0) {
                this.valorMaximo = "R$ " + this.$root.buscaImovel.valorMaximo;
            }
            //if (this.$validator.is(this.$root.buscaImovel.imovel.quartos))
            //    this.quartos = this.$root.buscaImovel.imovel.quartos;


            this.showForm = this.show;

        },
        mounted() {
            // cclear();
            //this.isCollapse = this.$root.isMenuCollapse;
            this.Buscar();
        },
        methods: {

            ToggleShowForm() {
                this.$tools.Top();
                this.showForm = !this.showForm;
                this.$emit("showform");
            },

            CheckValues() {

                this.isValidValues = true;

                this.$root.buscaImovel.imovel.valorMinimo = this.$validator.is(this.valorMinimo) ? parseInt(this.valorMinimo.replace("R$ ", "").replaceAll(".", "")) : 0;
                this.$root.buscaImovel.imovel.valorMaximo = this.$validator.is(this.valorMaximo) ? parseInt(this.valorMaximo.replace("R$ ", "").replaceAll(".", "")) : 0;
                this.$root.buscaImovel.imovel.areaMinima  = this.$validator.is(this.areaMinima)  ? parseInt(this.areaMinima.replace("m² " , "").replaceAll(".", "")) : 0;
                this.$root.buscaImovel.imovel.areaMaxima  = this.$validator.is(this.areaMaxima)  ? parseInt(this.areaMaxima.replace("m² " , "").replaceAll(".", "")) : 0;

                if (this.$root.buscaImovel.imovel.valorMaximo > 0 && (this.$root.buscaImovel.imovel.valorMaximo < this.$root.buscaImovel.imovel.valorMinimo)) {
                    this.$tools.Alert("<b>Valor Máximo</b> deve ser maior ou igual ao <b>Valor Mínimo</b>")
                    this.isValidValues = false;
                }
                if (this.$root.buscaImovel.imovel.areaMaxima > 0 && (this.$root.buscaImovel.imovel.areaMaxima < this.$root.buscaImovel.imovel.areaMinima)) {
                    this.$tools.Alert("<b>Área Máxima</b> deve ser maior ou igual à <b>Área Mínima</b>");
                    this.isValidValues = false;
                }
            },

            Buscar() {

                this.CheckValues();

                if (this.isValidValues) {

                    this.$root.buscaImovel.page = 0;


                    this.$root.buscaImovel.imovel.interno.totalQuartos    = this.$validator.is(this.quartos    ) ? parseInt(this.quartos    )   : 0;
                    this.$root.buscaImovel.imovel.interno.totalBanheiros  = this.$validator.is(this.banheiros  ) ? parseInt(this.banheiros  )   : 0;
                    this.$root.buscaImovel.imovel.interno.totalSuites     = this.$validator.is(this.suites     ) ? parseInt(this.suites     )   : 0;
                    this.$root.buscaImovel.imovel.externo.totalVagas      = this.$validator.is(this.vagas      ) ? parseInt(this.vagas      )   : 0;

                    this.$root.buscaImovel.valorMinimo       = this.$validator.is(this.valorMinimo) ? this.$tools.ParseInt(this.valorMinimo.replace("R$ ", "").replaceAll(".", "")) : 0;
                    this.$root.buscaImovel.valorMaximo       = this.$validator.is(this.valorMaximo) ? this.$tools.ParseInt(this.valorMaximo.replace("R$ ", "").replaceAll(".", "")) : 0;
                    this.$root.buscaImovel.areaMinima        = this.$validator.is(this.areaMinima)  ? this.$tools.ParseInt(this.areaMinima.replace("m² ", "" ).replaceAll(".", "")) : 0;
                    this.$root.buscaImovel.areaMaxima        = this.$validator.is(this.areaMaxima)  ? this.$tools.ParseInt(this.areaMaxima.replace("m² ", "" ).replaceAll(".", "")) : 0;

                    //if (this.$validator.is(this.$root.buscaImovel.tipoImovel))
                    //    this.$root.buscaImovel.imovel.tipo = this.$root.buscaImovel.tipoImovel.label;

                    if (this.buscaImovel.tipo)
                        this.buscaImovel.imovel.idTipo =  this.buscaImovel.tipo.id;

                    this.$root.buscaImovel.bairros = [];
                    if (this.$root.buscaImovel.bairros?.length > 0)
                        this.$root.buscaImovel.bairros.forEach(item => this.$root.buscaImovel.bairros.push(item.label));

                    this.$root.buscaImovel.imovel.venda = true;
                    //console.table(this.$root.buscaImovel.imovel.bairros);
                    //c(this.$root.buscaImovel.imovel);

                    if (this.isMobile && this.showForm)
                        this.ToggleShowForm();

                    this.$emit("buscarimoveis");
                }


            },


            ClearFilter() {


                this.$root.buscaImovel = this.$models.imovelBusca();
                this.$root.buscaImovel.imovel = this.$models.imovel();
                this.$root.buscaImovel.imovel.cod = "";

                this.opcoes.cidades = [];
                this.opcoes.bairros = [];


                this.tipoImovel = "";
                this.tipoOperacao = "";
                //this.estado        = "";
                //this.cidade        = "";
                //this.bairro        = "";
                this.valorMinimo = "";
                this.valorMaximo = "";
                this.areaMinima = "";
                this.areaMaxima = "";
                this.quartos = "";
                this.vagas = "";
                this.banheiros = "";
                this.suites = "";

                //c("clear")

            },





            ObterCidades(estado) {

                this.$root.buscaImovel.imovel.endereco.cidade   =   this.$root.buscaImovel.imovel.endereco.bairro   = "";
                this.$root.buscaImovel.imovel.endereco.idCidade =   this.$root.buscaImovel.imovel.endereco.idBairro = 0;

                this.carregandoCidades = true;
                this.opcoes.bairros = [];
                this.opcoes.cidades = [];
                var cidades = [];

                if (this.$validator.is(estado)) {
                    this.$root.buscaImovel.imovel.endereco.idEstado = this.opcoes.estados.filter((e) => e.value == estado)[0].id;
                    this.$sdata.ObterCidades(this.$root.buscaImovel.imovel.endereco.idEstado).then(res => { this.opcoes.cidades = res; this.carregandoCidades = false; });
                }

            },


            ObterBairros(cidade) {

                this.$root.buscaImovel.imovel.endereco.bairro   = "";
                this.$root.buscaImovel.imovel.endereco.idBairro = 0;
                
                this.carregandoBairros = true;
                this.opcoes.bairros = [];
                var bairros = [];

                if (this.$validator.is(cidade)) {
                    this.$root.buscaImovel.imovel.endereco.idCidade = this.opcoes.cidades.filter((c) => c.value == cidade)[0].id;
                    this.$sdata.ObterBairros(this.$root.buscaImovel.imovel.endereco.idCidade).then(res => { this.opcoes.bairros = res; this.carregandoBairros = false; });
                } 

            },

            DefinirBairro(bairro) {
                this.$root.buscaImovel.imovel.endereco.idBairro = this.opcoes.bairros.filter((c) => c.value == bairro)[0].id;
                //this.$root.buscaImovel.imovel.bairro = bairro.label;
                //c2("this.proprietario", this.proprietario)
            },








        }

    }

</script>


<!--<script setup>
const isCollapse = ref(true);
const handleOpen = function(key, keyPath){
  c(key, keyPath);
}
const handleClose = function(key, keyPath){
  c(key, keyPath);
}
</script>-->

<style scoped>


    #side-search {
        transition: width 0.3s;
        /*width: 320px;*/
        /*max-width: 320px;*/
        overflow-x: hidden;
    }
</style>


