<template>
    <div>
        <div v-if="$root.isAuth">
            <el-container :style="$root.onRequest? 'cursor:wait' : 'cursor:default'">

                <c-imovel-busca-form :show="showForm" @buscarimoveis="Buscar"  v-if="$validator.is($root.buscaImovel?.imovel)" :style="$root.onRequest? 'pointer-events: none;opacity:0.4;cursor:wait' : ''"></c-imovel-busca-form>
                
                <el-container style="cursor:default">

                    <div class="row" style="width:100%;margin-bottom:40px;display:block">
                        <div class="col-12 search-header" :style="showForm? 'max-width:calc(100% - 54px);margin-top:0px':'margin-left:auto;max-width:calc(100% - 54px);margin-right:4px;margin-top:53px;'">
                            <span v-html="buscaTitulo"></span>
                            <!-- Apartamentos à venda em Cidade Nova, Belo Horizonte, MG. -->
                        </div>

                        <div class="col-12" style="width:100%;text-align:center;padding:40px;padding-left:0px" v-if="$root.onRequest">
                            <c-loading size="60px"></c-loading>
                        </div>
                        <div class="col-12" style="width:100%" v-else>
                            <div class="col-12" style="width:100%;text-align:center;padding:40px;padding-left:0px" v-if="!$root.onRequest && results?.length == 0">
                                <i class="fa fa-circle-exclamation" style="font-size:80px;color:var(--s-accent-color)"></i>  <br />
                                <div style="font-size:20px;font-weight:700;color:var(--s-accent-color);margin-top:20px">Nada encontrado</div>
                            </div>
                            <div v-for="(item,index) in results" v-else>
                                <!--<c-building-card :id="$tools.GetRandomID()" :imovel="item"></c-building-card>-->
                                <c-imovel-card :id="$tools.GetRandomID()" :imovel="item"></c-imovel-card>
                            </div>
                        </div>

                        <div v-if="showNavigator" style="width:100%;text-align:center;padding:40px;padding-left:0px">

                            <div class="q-pa-lg flex flex-center">
                                <!--<el-pagination layout="prev, pager, next" :total="totalNav" :page-count="Math.ceil(totalNav/20)" v-model:current-page="page" @current-change="Nav"></el-pagination>-->
                                    <el-pagination layout="prev, pager, next" :total="$root.buscaImovel.total" :page-size="$root.buscaImovel.resultsPerPage" v-model:current-page="page" @current-change="Buscar"></el-pagination>
                            </div>

                            <!--
                        <q-btn label="Anterior" color="primary" icon="fa fa-caret-left" @click="NavTemp(-1)" :disabled="$root.imovelBusca.page == 0"></q-btn>
                        &nbsp;&nbsp;<div style="display:inline-block;width:100px;text-align:center;font-size:24px;color:var(--s-accent-color)">{{page}}</div>&nbsp;&nbsp;


                            <q-btn label="Próximo" color="primary" icon-right="fa fa-caret-right" @click="NavTemp(1)"></q-btn>
                        <br /><br />
                        <el-pagination layout="prev, pager, next" :total="totalResults" @prev-click="Nav(-1)" @next-click="Nav(1)" v-model:current-page="page" @current-change="NavTo"></el-pagination>
                        <br /><br />
                        <div class="q-pa-lg flex flex-center">
                            <q-pagination
                              v-model="page"
                              :max="totalResults"
                              :max-pages="10"
                              direction-links
                              boundary-links
                              icon-prevt="fa fa-caret-left"
                              icon-next="fa fa-caret-right"
                              icon-firs="fa fa-backward"
                              icon-last="fa fa-forward"
                            />
                          </div>-->

                        </div>

                    </div>




                </el-container>
            </el-container>
        </div>
        <div v-else style="width:100%;text-align:center;margin-top:40px">
            <div style="color:var(--s-color-primary;font-weight:700;margin-bottom:10px">É necessário estar logado para acessar esta área</div>
            <q-btn label="Seja nosso parceiro para buscar imóveis" @click="$root.RouteTo('parceiros')" color="primary" style="padding:20px"></q-btn>
        </div>
    </div>
</template>


<script>
    module.exports = {

        name: 'JaCapteiImoveisBusca',

        components: {

        },

        data: function () {
            return {
                showForm            :   window.screen.width > 1000,
                showNavigator       :   false,
                showModalImages     :   false,
                imagesData:[],
                images:[],
                imageIndex: 0,
                results:[],
                totalResults:0,
                totalNav:0,
                page:1,
                buscaTitulo:"buscando...",
 
                opcoes: { estados: [], cidades: [], bairros: [],
                    sexos: [],
                    anos:[],
                    quantidades:[],
                    tiposImoveis:this.$models.tiposImoveis(),
                    tiposComplementos:this.$models.tiposComplementos()
                },

           }
        }, computed: {

        },

        props: {

        },
        watch: {
            //"pct":function(){ this.updateLabels(); }
        },
        created: function () {
            this.$root.onRequest = true;
            //for(var i=0;i<8;i++)
            //    this.results.push({name:"card"+i});
        },
        async mounted() {
            const sessionRestored = await this.$root.RestoreSession();
            if (sessionRestored)
             this.Buscar();
           else
             this.$root.RequestLogin();
        },
        methods: {

            Nav(page){
                 //c(`current page: ${page}`)
                if(this.$root.imovelBusca.page != (page-1)){
                    //this.page = page;
                    if( (this.$root.imovelBusca.page + page) < 0){
                        this.$root.imovelBusca.page = 0;
                    }else{
                        this.$root.imovelBusca.page = (page-1);
                    }
                    this.Buscar();
                }
            },
   
            NavTemp(count){
                if(this.$root.imovelBusca.page != count){
                    if( (this.$root.imovelBusca.page + count) < 0){
                        this.$root.imovelBusca.page = 0;
                        this.page = 1;
                    }else{
                        this.$root.imovelBusca.page += count;
                        this.page = this.$root.imovelBusca.page + count;
                    }
                    this.Buscar();
                }
            },
   

            NavTo(pg){
                    this.$root.imovelBusca.page = (pg-1);
                    this.page = pg;
                    this.Buscar();
            },
   


            SetBuscaTitulo(buscaImovel){

                var imovel = buscaImovel.imovel;
                this.buscaTitulo = "";
                
                var tipo = this.$models.tiposImoveis().filter(i => i.id == imovel.idTipo)[0];
                var totalRendered = Math.min(buscaImovel.page * buscaImovel.resultsPerPage, buscaImovel.total);

                this.buscaTitulo += this.$validator.is(tipo) ?
                    tipo.label :
                    `Visualizando ${totalRendered} de ${buscaImovel.total} imóveis`;     
                    
                this.buscaTitulo += " à venda" ;

                this.buscaTitulo += (imovel.interno.totalQuartos)? (", "+imovel.interno.totalQuartos + " quartos ") :"";

                if(this.$validator.is(imovel.endereco.estado)){
                    this.buscaTitulo += buscaImovel.bairros.length === 1 ? " no bairro " : " em ";
                    this.buscaTitulo += (this.$validator.is(buscaImovel.bairros.length == 1)) ? (buscaImovel.bairros[0] + ", ") : (this.$validator.is(buscaImovel.bairros.length > 1)) ? (buscaImovel.bairros.length + " bairros de ") : "";
                    this.buscaTitulo +=  this.$validator.is(imovel.bairros)? (imovel.endereco.cidade+", "+imovel.endereco.estado) : imovel.endereco.estado;
                }
                

            },

            async Buscar(){

                        this.buscaTitulo = "buscando...";
                        this.$tools.Top();
                        this.showNavigator   = false;
                        this.$root.buscaImovel.page = this.page;

                        this.totalResults = 0;
                        this.results      = [];

                        this.$root.onRequest = true;
                        var request = await this.$api.Post("imovel/buscar",this.$root.buscaImovel);
                       
                        if (request?.status?.success){
                            this.$root.buscaImovel =  request.result;
                            this.results     =  this.$root.buscaImovel.result.imoveis;
                        }else
                            this.$tools.Alert("Não foi possível realizar a busca");

                        this.$root.onRequest = false;
                        window.setTimeout(()=>this.showNavigator = true, 3000);

                        this.SetBuscaTitulo(this.$root.buscaImovel);



            },











        }

    }








</script>



<style scoped>



.search-header{
    min-height:24px;
    line-height:22px;
    vertical-align:middle;
    border-radius:14px;
    padding:10px;
    padding-left:20px;
    margin-left:20px;
    margin-right:20px;
    margin-bottom:auto;
    font-weight:600;
    color:var(--s-text-color);
    /*border:solid 2px #efefef;*/
    box-shadow: rgba(99, 99, 99, 0.1) 0px 2px 8px 0px;
    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;
    background-color:#efefef;
}



</style>

