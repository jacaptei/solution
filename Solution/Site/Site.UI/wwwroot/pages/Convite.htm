<template>
    <div class="container">
        <div style="text-align: center; width: 100%;">
            <div style="text-align:center;width:100%; margin-bottom: 20px;">
                <p class="title" style="font-size: 24px; font-weight: bold; line-height: 1.5;">
                    Conclua seu registro e faça parte do time de sucesso da <br>
                    <span style="text-transform: uppercase;">{{ this.dadosConta.razao }}</span>!
                </p>
            </div>

            <div class="invite-form" id="form" v-if="view == 'form'">
                <el-col :md="24">
                    <el-row :gutter="20">
                        <el-col :xs="24" :sm="24" :md="24" :lg="24" class="input-form">
                            <div>
                                <div>NOME COMPLETO</div>
                            </div>
                            <el-input @keyup.enter="Send()" v-model="nome" placeholder="" maxlength="80" input-style="text-transform:uppercase;"></el-input>
                        </el-col>
                        <el-col :xs="24" :sm="24" :md="24" :lg="24" class="input-form">
                            <div>CPF<span></span></div>
                            <el-input @keyup.enter="Send()" v-model="cpf" maxlength="22" v-maska data-maska="###.###.###-##"></el-input>
                        </el-col>
                        <el-col :xs="24" :sm="24" :md="24" :lg="24" class="input-form">
                            <div>E-MAIL <span></span></div>
                            <el-input @keyup.enter="Send()" v-model="email" placeholder="" maxlength="80" input-style="text-transform:lowercase;"></el-input>
                        </el-col>
                        <el-col :xs="24" :sm="24" :md="24" :lg="24" class="input-form">
                            <div>TELEFONE <span></span></div>
                            <el-input @keyup.enter="Send()" v-model="telefone" placeholder="(11) 11111-1111" maxlength="40" input-style="text-transform:lowercase;" v-maska data-maska="(##) #####-####"></el-input>
                        </el-col>
                        <el-col :xs="24" class="input-form">
                            <div>DATA DE NASCIMENTO</div>
                            <div class="birth-date">
                                <el-select v-model="DiaNascimento" filterable placeholder="DIA" size="medium">
                                    <el-option v-for="item in $sdata.forms.days" :key="item.value" :label="item.label" :value="item.value"></el-option>
                                </el-select>

                                <el-select v-model="MesNascimento" filterable placeholder="MÊS" size="medium">
                                    <el-option v-for="item in $sdata.forms.months" :key="item.value" :label="item.label" :value="item.value"></el-option>
                                </el-select>

                                <el-select v-model="AnoNascimento" filterable placeholder="ANO" size="medium">
                                    <el-option v-for="item in $sdata.forms.years" :key="item.value" :label="item.label" :value="item.value"></el-option>
                                </el-select>
                            </div>
                        </el-col>

                        <el-col :xs="24" :sm="24" :md="24" :lg="24" class="input-form">
                            <div>SEXO <span></span></div>
                            <el-select filterable v-model="sexo" class="m-4" placeholder="Selecionar" size="large" style="width:100%">
                                <el-option v-for="item in opcoes.sexos" :key="item.id" :label="item.label" :value="item.value"></el-option>
                            </el-select>
                        </el-col>

                        <el-col :xs="24" :sm="12" :md="12" :lg="12" class="input-form">
                            <div>
                                <div>CRECI</div>
                            </div>
                            <el-input @keyup.enter="Send()" v-model="creci" placeholder="" maxlength="22"></el-input>
                        </el-col>

                        <el-col :xs="24" :sm="24" :md="12" :lg="12" class="input-form">
                            <div><p>CRECI - ESTADO</p><span></span></div>
                            <div style="height:40px" v-if="carregandoEstadosCreci">
                                <c-loading size="30px" style="padding-left:5px"></c-loading>
                            </div>
                            <el-select v-else filterable v-model="creciEstado" class="m-4" placeholder="Selecionar" size="large" style="width:100%" @change="(item)=>{enableFilterButton = true;}">
                                <el-option v-for="item in opcoes.estadosCreci" :key="item.id" :label="item.label" :value="item.uf"></el-option>
                            </el-select>
                        </el-col>

                        <el-col :xs="24" :sm="24" :md="24" :lg="24" class="input-form">
                            <div>SENHA</div>
                            <el-input @keyup.enter="Send()"
                                      v-model="senha"
                                      type="password"
                                      placeholder="A senha deve ter pelo menos 8 caracteres, incluindo letras maiúsculas, minúsculas, números e caracteres especiais."
                                      maxlength="20"
                                      show-password></el-input>
                        </el-col>

                        <el-col :xs="24" :sm="24" :md="24" :lg="24" class="input-form">
                            <div>CONFIRMAR SENHA</div>
                            <el-input @keyup.enter="Send()" v-model="senhaConfirma" type="password" placeholder="repita a senha" maxlength="20" show-password></el-input>
                        </el-col>
                    </el-row>

                    <el-row :gutter="20">
                        <el-col :md="24" style="margin:10px">
                            <div>
                                <el-checkbox v-model="aceitouTermos">aceito os termos e condições de uso <a href="files/JaCaptei_Termos_de_Uso.pdf" target="_blank" style="font-weight:800;color:var(--s-accent-color)"> <i class="fa fa-up-right-from-square" style="padding-left:10px;padding-right:4px;font-size:14px;color:var(--s-accent-color)"></i> ver termos</a></el-checkbox>
                                <br />
                                <el-checkbox v-model="aceitouPoliticaPrivacidade">aceito a política de privacidade dos dados <a href="files/JaCaptei_Politica_Privacidade.pdf" target="_blank" style="font-weight:800;color:var(--s-accent-color)"> <i class="fa fa-up-right-from-square" style="padding-left:10px;padding-right:4px;font-size:14px;color:var(--s-accent-color)"></i> ver política</a></el-checkbox>
                            </div>
                        </el-col>
                    </el-row>

                    <el-row :gutter="20">
                        <el-col :md="24" style="margin-top:0px">
                            <q-btn label="Enviar" color="secondary" @click="Send()" style="width:100%;height:40px"></q-btn>
                        </el-col>
                    </el-row>

                    <el-row :gutter="20" style="margin-top:20px">
                        <el-col :md="12">
                            Já tem cadastro? faça o <el-button type="primary" link @click="$root.Login()">LOGIN</el-button>
                        </el-col>
                        <el-col :md="12" style="text-align:end;padding-right:10px">
                            Exceto <i>Complemento</i>, todos os campos são necessários.
                        </el-col>
                    </el-row>
                </el-col>
            </div>

            <div v-else-if="view=='sending'" style="min-height:374px">
                <br /><br />
                <div class="title" style="color:#fff"><b>Enviando</b></div>
                <br /><br />
                <c-loading size="3em" color="#fff"></c-loading>
            </div>

            <div v-else-if="view=='alert'">
                <br /><br />
                <div class="title" style="color:var(--s-color-yellow)"><b><i class="fa-solid fa-triangle-exclamation"></i> Atenção</b></div>
                <br /><br />
                <br /><span v-html="messageAlert"></span>
                <br /><br />
                <q-btn color="white" text-color="indigo-10" label="VOLTAR" @click="ShowView(viewLast)" style="width:160px;" id="btn_voltar_5"></q-btn>
            </div>

            <div v-else-if="view=='success'">
                <br /><br />
                <div class="title" style="color:var(--s-color-yellow)"><b><i class="fa-solid fa-check-circle"></i> Sucesso</b></div>
                <br /><br />
                <span v-html="messageAlert"></span>
                <br /><br />
                <q-btn color="white" text-color="indigo-10" label="VOLTAR" @click="ShowView(viewLast)" style="width:160px;" id="btn_voltar_5"></q-btn>
            </div>
        </div>
    </div>
</template>


<script>
    module.exports = {
        name: 'JaCapteiConviteMembros',
        components: {},

        data: function () {
            return {
                onRequest: true,
                id: null,
                cod: null,
                url: window.location,
                usuario: {},
                onRequest: false,
                view: "form",
                viewLast: "form",
                messageSuccess: "Cadastrado!",
                messageAlert: "",
                contaNova: true,
                messageFail: "Não foi possível autenticar, favor tentar novamente.",
                content: "",
                nome: "",
                cpf: "",
                email: "",
                telefone: "",
                dataNascimento: "",
                sexo: "",
                creci: "",
                creciEstado: "",
                senha: "",
                senhaConfirma: "",
                aceitouTermos: "",
                aceitouPoliticaPrivacidade: "",
                DiaNascimento: 0,
                MesNascimento: 0,
                AnoNascimento: 0,
                dadosConta: [],
                carregandoCEP: false,
                carregandoEstados: false,
                carregandoCidades: false,
                carregandoBairros: false,
                carregandoEstadosCreci: false,
                carregandoCidadesCreci: false,
                estadoSelecionado: {},
                cidadeSelecionada: {},
                bairroSelecionado: {},
                cep: {
                    numero: "",
                    estado: "",
                    cidade: "",
                    logradouro: ""
                },
                opcoes: {
                    cidades: [],
                    estados: this.$root.localidade.estados,
                    estadosCreci: this.$root.localidade.estados,
                    cidadesCreci: [],
                    bairros: [],
                    sexos: [{ id: 1, label: "NÃO APLICÁVEL", value: "NA" }, { id: 2, label: "MASCULINO", value: "MASCULINO" }, { id: 3, label: "FEMININO", value: "FEMININO" }],
                }
            }
        },
        computed: {},
        created: function () {
            try {
                var queryParams = this.$tools.HandleParams();
                this.cod = queryParams.cod;
                this.BuscarContaPeloToken();
            } catch (e) { }
        },

        mounted() { },
        methods: {
            async BuscarContaPeloToken() {
                var buscarConta = [];
                const url = this.$api.BuildURL(`parceiro/obtercontapelotoken/${encodeURIComponent(this.cod)}`)
                var request = await axios.get(url);
                if (request.status == 200) {
                    this.dadosConta = request.data.result;
                    console.log(this.dadosConta);
                } else
                    this.indisponivel = true;

                this.onRequest = false;
            },
            async Send() {
                if (!this.nome || !this.cpf || !this.email || !this.telefone) {
                    this.messageAlert = "Todos os campos são obrigatórios.";
                    this.view = 'alert';
                    return;
                }

                if (!this.CheckDoc(this.cpf)) {
                    this.messageAlert = "CPF inválido.";
                    this.view = 'alert';
                    return;
                }

                const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                if (!emailPattern.test(this.email)) {
                    this.messageAlert = "E-mail inválido.";
                    this.view = 'alert';
                    return;
                }

                if (!this.IsStrongPassword(this.senha)) {
                    this.messageAlert = "A senha deve ter pelo menos 8 caracteres, incluindo letras maiúsculas, minúsculas, números e caracteres especiais.";
                    this.view = 'alert';
                    return;
                }

                if (this.senha !== this.senhaConfirma) {
                    this.messageAlert = "As senhas não coincidem.";
                    this.view = 'alert';
                    return;
                }

                this.view = 'sending';

                try {
                    const url = this.$api.BuildURL(`parceiro/cadastro-convite`);

                    const dataNascimento = `${this.AnoNascimento}-${String(this.MesNascimento).padStart(2, '0')}-${String(this.DiaNascimento).padStart(2, '0')}`;

                    const response = await axios.post(url, {
                        nome: this.nome,
                        cpf: this.cpf,
                        email: this.email,
                        telefone: this.telefone,
                        idConta: this.dadosConta.id,
                        dataNascimento: dataNascimento,
                        sexo: this.sexo,
                        creci: this.creci,
                        anoNascimento: this.AnoNascimento,
                        mesNascimento: this.MesNascimento,
                        diaNascimento: this.DiaNascimento,
                        dataNascimento: dataNascimento,
                        creciEstado: this.creciEstado,
                        senha: this.senha,
                        aceitouTermos: this.aceitouTermos,
                        aceitouPoliticaPrivacidade: this.aceitouPoliticaPrivacidade,
                        tokenConta: this.dadosConta.token,
                        tokenConvite: this.dadosConta.tokenConvite,
                    });

                    if (response.data.success) {
                        this.view = 'success';
                    } else {
                        this.messageFail = response.data.message || "Erro ao cadastrar. Tente novamente.";
                        this.view = 'fail';
                    }
                } catch (error) {
                    console.error(error);
                    this.messageFail = "Erro ao conectar ao servidor. Tente novamente.";
                    this.view = 'fail';
                }
            },

            ShowView(v) {
                this.view = v;
            },

            IsStrongPassword(password) {
                const lengthCriteria = password.length >= 8;
                const upperCaseCriteria = /[A-Z]/.test(password);
                const lowerCaseCriteria = /[a-z]/.test(password);
                const numberCriteria = /[0-9]/.test(password);
                const specialCharacterCriteria = /[!@#$%^&*]/.test(password);

                return lengthCriteria && upperCaseCriteria && lowerCaseCriteria && numberCriteria && specialCharacterCriteria;
            },

            CheckDoc(cpf) {
                cpf = cpf.replace(/\D/g, '');

                if (cpf.length !== 11 || /^(\d)\1{10}$/.test(cpf)) {
                    return false; // CPF inválido
                }

                let soma = 0;
                let digito1;
                let digito2;

                for (let i = 0; i < 9; i++) {
                    soma += parseInt(cpf[i]) * (10 - i);
                }
                digito1 = (soma * 10) % 11;
                if (digito1 === 10 || digito1 === 11) {
                    digito1 = 0;
                }

                if (digito1 !== parseInt(cpf[9])) {
                    return false; // CPF inválido
                }

                soma = 0;

                for (let i = 0; i < 10; i++) {
                    soma += parseInt(cpf[i]) * (11 - i);
                }
                digito2 = (soma * 10) % 11;
                if (digito2 === 10 || digito2 === 11) {
                    digito2 = 0;
                }

                return digito2 === parseInt(cpf[10]); // Retorna true se o CPF for válido
            }
        }
    }
</script>

<style scoped>
    .container {
        width: 100%;
        max-width: 600px;
        margin-left: auto;
        margin-right: auto;
        padding: 20px;
        box-sizing: border-box;
        border-radius: 8px;
    }

    .input-form {
        letter-spacing: 0.02em;
        color: #EF5924;
        margin-top: 2px;
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        margin-bottom: 15px;
        width: 100%;
        font-weight: bold;
    }

    .header {
        text-align: center;
        margin-bottom: 20px;
    }

    .invite-form {
        background-color: #dedede;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .birth-date {
        display: flex;
        gap: 10px;
    }

    .submit-button {
        margin-top: 20px;
    }

    @media (max-width: 600px) {
        .invite-form {
            padding: 15px;
        }

        .birth-date {
            flex-direction: column;
        }

        .submit-button {
            margin-top: 10px;
        }
    }
</style>